/*
 * Copyright 2015, Yahoo Inc.
 * Copyrights licensed under the Apache 2.0 License.
 * See the accompanying LICENSE file for terms.
 */

apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 29
    
    defaultConfig {
        targetSdkVersion 29
        minSdkVersion 17
    }

    /*compileOptions {
       sourceCompatibility 1.9
       targetCompatibility 1.9
    }*/
    
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}.aar"
                //output.outputFileName = new File(outputFile.parent, fileName)
                output.outputFileName  = fileName
            }
        }
    }
}

def siteUrl = 'https://github.com/yahoo/squidb'
def gitUrl = 'https://github.com/yahoo/squidb.git'

/*install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'SquiDB Android components'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}*/

dependencies {
    implementation project(':squidb')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task clearJar(type: Delete) {
    delete 'build/libs/ProjectName.jar'
}

task makeJar(type: Copy) {
    from('build/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'ProjectName.jar')
}

makeJar.dependsOn(clearJar, build)

tasks.assemble.finalizedBy(makeJar)