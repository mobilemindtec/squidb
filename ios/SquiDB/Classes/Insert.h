//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Insert.java
//

#ifndef Insert_H
#define Insert_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TableStatement.h"

@class IOSObjectArray;
@class SquiDBQuery;
@class SquiDBSqlBuilder;
@class SquiDBSqlTable;
@class SquiDBTable;
@class SquiDBValuesStorage;
@class SquiDBVersionCode;
@class SquiDBView;

@interface SquiDBInsert : SquiDBTableStatement
@property (readonly, class) SquiDBVersionCode *SQLITE_VERSION_MULTI_ROW_INSERT NS_SWIFT_NAME(SQLITE_VERSION_MULTI_ROW_INSERT);

+ (SquiDBVersionCode *)SQLITE_VERSION_MULTI_ROW_INSERT;

#pragma mark Public

- (SquiDBInsert *)columnsWithSquiDBPropertyArray:(IOSObjectArray *)columns;

- (SquiDBInsert *)columnsWithNSStringArray:(IOSObjectArray *)columnNames;

- (SquiDBInsert *)defaultValues;

- (SquiDBInsert *)fromValuesWithSquiDBValuesStorage:(SquiDBValuesStorage *)values;

- (jint)getNumRows;

- (SquiDBSqlTable *)getTable;

+ (SquiDBInsert *)intoWithSquiDBTable:(SquiDBTable *)table;

+ (SquiDBInsert *)intoWithSquiDBView:(SquiDBView *)view;

- (SquiDBInsert *)onConflictWithSquiDBTableStatement_ConflictAlgorithm:(SquiDBTableStatement_ConflictAlgorithm *)conflictAlgorithm;

- (SquiDBInsert *)selectWithSquiDBQuery:(SquiDBQuery *)select;

- (SquiDBInsert *)valuesWithNSObjectArray:(IOSObjectArray *)values;

#pragma mark Package-Private

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(SquiDBInsert)

inline SquiDBVersionCode *SquiDBInsert_get_SQLITE_VERSION_MULTI_ROW_INSERT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT SquiDBVersionCode *SquiDBInsert_SQLITE_VERSION_MULTI_ROW_INSERT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBInsert, SQLITE_VERSION_MULTI_ROW_INSERT, SquiDBVersionCode *)

FOUNDATION_EXPORT SquiDBInsert *SquiDBInsert_intoWithSquiDBTable_(SquiDBTable *table);

FOUNDATION_EXPORT SquiDBInsert *SquiDBInsert_intoWithSquiDBView_(SquiDBView *view);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBInsert)

@compatibility_alias ComYahooSquidbSqlInsert SquiDBInsert;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Insert_H
