//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SqlStatement.java
//

#ifndef SqlStatement_H
#define SqlStatement_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class SquiDBCompileContext;
@class SquiDBCompiledStatement;
@class SquiDBVersionCode;

@protocol SquiDBSqlStatement < JavaObject >

- (SquiDBCompiledStatement *)compileWithSquiDBVersionCode:(SquiDBVersionCode *)sqliteVersion;

- (SquiDBCompiledStatement *)compileWithSquiDBCompileContext:(SquiDBCompileContext *)compileContext;

- (NSString *)toRawSqlWithSquiDBVersionCode:(SquiDBVersionCode *)sqliteVersion;

- (NSString *)toRawSqlWithSquiDBCompileContext:(SquiDBCompileContext *)compileContext;

@end

@interface SquiDBSqlStatement : NSObject
@property (readonly, class) IOSObjectArray *EMPTY_ARGS NS_SWIFT_NAME(EMPTY_ARGS);
@property (readonly, copy, class) NSString *REPLACEABLE_PARAMETER NS_SWIFT_NAME(REPLACEABLE_PARAMETER);
@property (readonly, copy, class) NSString *REPLACEABLE_ARRAY_PARAMETER NS_SWIFT_NAME(REPLACEABLE_ARRAY_PARAMETER);
@property (readonly, copy, class) NSString *REPLACEABLE_ARRAY_PARAMETER_REGEX NS_SWIFT_NAME(REPLACEABLE_ARRAY_PARAMETER_REGEX);
@property (readonly, class) jint MAX_VARIABLE_NUMBER NS_SWIFT_NAME(MAX_VARIABLE_NUMBER);

+ (IOSObjectArray *)EMPTY_ARGS;

+ (NSString *)REPLACEABLE_PARAMETER;

+ (NSString *)REPLACEABLE_ARRAY_PARAMETER;

+ (NSString *)REPLACEABLE_ARRAY_PARAMETER_REGEX;

+ (jint)MAX_VARIABLE_NUMBER;

@end

J2OBJC_STATIC_INIT(SquiDBSqlStatement)

inline IOSObjectArray *SquiDBSqlStatement_get_EMPTY_ARGS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *SquiDBSqlStatement_EMPTY_ARGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBSqlStatement, EMPTY_ARGS, IOSObjectArray *)

inline NSString *SquiDBSqlStatement_get_REPLACEABLE_PARAMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *SquiDBSqlStatement_REPLACEABLE_PARAMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBSqlStatement, REPLACEABLE_PARAMETER, NSString *)

inline NSString *SquiDBSqlStatement_get_REPLACEABLE_ARRAY_PARAMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *SquiDBSqlStatement_REPLACEABLE_ARRAY_PARAMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBSqlStatement, REPLACEABLE_ARRAY_PARAMETER, NSString *)

inline NSString *SquiDBSqlStatement_get_REPLACEABLE_ARRAY_PARAMETER_REGEX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *SquiDBSqlStatement_REPLACEABLE_ARRAY_PARAMETER_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBSqlStatement, REPLACEABLE_ARRAY_PARAMETER_REGEX, NSString *)

inline jint SquiDBSqlStatement_get_MAX_VARIABLE_NUMBER(void);
#define SquiDBSqlStatement_MAX_VARIABLE_NUMBER 999
J2OBJC_STATIC_FIELD_CONSTANT(SquiDBSqlStatement, MAX_VARIABLE_NUMBER, jint)

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSqlStatement)

#define ComYahooSquidbSqlSqlStatement SquiDBSqlStatement


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SqlStatement_H
