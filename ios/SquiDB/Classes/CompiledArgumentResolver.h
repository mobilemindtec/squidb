//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CompiledArgumentResolver.java
//

#ifndef CompiledArgumentResolver_H
#define CompiledArgumentResolver_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/util/LinkedHashMap.h"

@class SquiDBCompiledStatement;
@class SquiDBSqlBuilder;
@protocol JavaUtilMap;
@protocol JavaUtilMap_Entry;

@interface SquiDBCompiledArgumentResolver : NSObject

#pragma mark Public

- (instancetype __nonnull)initPackagePrivateWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder;

- (SquiDBCompiledStatement *)resolveToCompiledStatement;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(SquiDBCompiledArgumentResolver)

FOUNDATION_EXPORT void SquiDBCompiledArgumentResolver_initPackagePrivateWithSquiDBSqlBuilder_(SquiDBCompiledArgumentResolver *self, SquiDBSqlBuilder *builder);

FOUNDATION_EXPORT SquiDBCompiledArgumentResolver *new_SquiDBCompiledArgumentResolver_initPackagePrivateWithSquiDBSqlBuilder_(SquiDBSqlBuilder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBCompiledArgumentResolver *create_SquiDBCompiledArgumentResolver_initPackagePrivateWithSquiDBSqlBuilder_(SquiDBSqlBuilder *builder);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBCompiledArgumentResolver)

@compatibility_alias ComYahooSquidbSqlCompiledArgumentResolver SquiDBCompiledArgumentResolver;

@interface SquiDBCompiledArgumentResolver_SimpleLruCache : JavaUtilLinkedHashMap

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)maxCapacity;

#pragma mark Protected

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1
                          withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBCompiledArgumentResolver_SimpleLruCache)

FOUNDATION_EXPORT void SquiDBCompiledArgumentResolver_SimpleLruCache_initWithInt_(SquiDBCompiledArgumentResolver_SimpleLruCache *self, jint maxCapacity);

FOUNDATION_EXPORT SquiDBCompiledArgumentResolver_SimpleLruCache *new_SquiDBCompiledArgumentResolver_SimpleLruCache_initWithInt_(jint maxCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBCompiledArgumentResolver_SimpleLruCache *create_SquiDBCompiledArgumentResolver_SimpleLruCache_initWithInt_(jint maxCapacity);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBCompiledArgumentResolver_SimpleLruCache)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CompiledArgumentResolver_H
