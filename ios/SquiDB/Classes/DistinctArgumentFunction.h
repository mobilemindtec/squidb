//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DistinctArgumentFunction.java
//

#ifndef DistinctArgumentFunction_H
#define DistinctArgumentFunction_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ArgumentFunction.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class SquiDBField;
@class SquiDBSqlBuilder;

@interface SquiDBDistinctArgumentFunction : SquiDBArgumentFunction

#pragma mark Public

- (instancetype __nonnull)initPackagePrivateWithNSString:(NSString *)functionName
                                                  withId:(id)argument;

- (SquiDBField *)asWithNSString:(NSString *)arg0;

#pragma mark Protected

- (void)appendArgumentListWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                             withNSObjectArray:(IOSObjectArray *)arguments
                                   withBoolean:(jboolean)forSqlValidation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivateWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBDistinctArgumentFunction)

FOUNDATION_EXPORT void SquiDBDistinctArgumentFunction_initPackagePrivateWithNSString_withId_(SquiDBDistinctArgumentFunction *self, NSString *functionName, id argument);

FOUNDATION_EXPORT SquiDBDistinctArgumentFunction *new_SquiDBDistinctArgumentFunction_initPackagePrivateWithNSString_withId_(NSString *functionName, id argument) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBDistinctArgumentFunction *create_SquiDBDistinctArgumentFunction_initPackagePrivateWithNSString_withId_(NSString *functionName, id argument);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBDistinctArgumentFunction)

@compatibility_alias ComYahooSquidbSqlDistinctArgumentFunction SquiDBDistinctArgumentFunction;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DistinctArgumentFunction_H
