//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SquidCursor.java
//

#ifndef SquidCursor_H
#define SquidCursor_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ICursor.h"
#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSClass;
@class IOSObjectArray;
@class SquiDBProperty;
@protocol JavaUtilList;

@interface SquiDBSquidCursor : NSObject < SquiDBICursor >

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBICursor:(id<SquiDBICursor>)cursor
                                   withIOSClass:(IOSClass *)modelHint
                               withJavaUtilList:(id<JavaUtilList>)fields;

- (instancetype __nonnull)initWithSquiDBICursor:(id<SquiDBICursor>)cursor
                               withJavaUtilList:(id<JavaUtilList>)fields;

- (void)close;

- (id)getWithSquiDBProperty:(SquiDBProperty *)property;

- (IOSByteArray *)getBlobWithInt:(jint)columnIndex;

- (jint)getColumnCount;

- (jint)getColumnIndexWithNSString:(NSString *)columnName;

- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName;

- (NSString *)getColumnNameWithInt:(jint)columnIndex;

- (IOSObjectArray *)getColumnNames;

- (jint)getCount;

- (id<SquiDBICursor>)getCursor;

- (jdouble)getDoubleWithInt:(jint)columnIndex;

- (id<JavaUtilList>)getFields;

- (jfloat)getFloatWithInt:(jint)columnIndex;

- (jint)getIntWithInt:(jint)columnIndex;

- (jlong)getLongWithInt:(jint)columnIndex;

- (IOSClass *)getModelHintClass;

- (jint)getPosition;

- (jshort)getShortWithInt:(jint)columnIndex;

- (NSString *)getStringWithInt:(jint)columnIndex;

- (jint)getTypeWithInt:(jint)columnIndex;

- (jboolean)isAfterLast;

- (jboolean)isBeforeFirst;

- (jboolean)isClosed;

- (jboolean)isFirst;

- (jboolean)isLast;

- (jboolean)isNullWithInt:(jint)columnIndex;

- (jboolean)moveWithInt:(jint)offset;

- (jboolean)moveToFirst;

- (jboolean)moveToLast;

- (jboolean)moveToNext;

- (jboolean)moveToPositionWithInt:(jint)position;

- (jboolean)moveToPrevious;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(SquiDBSquidCursor)

FOUNDATION_EXPORT void SquiDBSquidCursor_initWithSquiDBICursor_withIOSClass_withJavaUtilList_(SquiDBSquidCursor *self, id<SquiDBICursor> cursor, IOSClass *modelHint, id<JavaUtilList> fields);

FOUNDATION_EXPORT SquiDBSquidCursor *new_SquiDBSquidCursor_initWithSquiDBICursor_withIOSClass_withJavaUtilList_(id<SquiDBICursor> cursor, IOSClass *modelHint, id<JavaUtilList> fields) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSquidCursor *create_SquiDBSquidCursor_initWithSquiDBICursor_withIOSClass_withJavaUtilList_(id<SquiDBICursor> cursor, IOSClass *modelHint, id<JavaUtilList> fields);

FOUNDATION_EXPORT void SquiDBSquidCursor_initWithSquiDBICursor_withJavaUtilList_(SquiDBSquidCursor *self, id<SquiDBICursor> cursor, id<JavaUtilList> fields);

FOUNDATION_EXPORT SquiDBSquidCursor *new_SquiDBSquidCursor_initWithSquiDBICursor_withJavaUtilList_(id<SquiDBICursor> cursor, id<JavaUtilList> fields) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSquidCursor *create_SquiDBSquidCursor_initWithSquiDBICursor_withJavaUtilList_(id<SquiDBICursor> cursor, id<JavaUtilList> fields);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSquidCursor)

@compatibility_alias ComYahooSquidbDataSquidCursor SquiDBSquidCursor;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SquidCursor_H
