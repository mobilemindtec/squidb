//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/IOSSQLiteDatabaseAdapter.java
//

#ifndef IOSSQLiteDatabaseAdapter_H
#define IOSSQLiteDatabaseAdapter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ISQLiteDatabase.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class SquiDBSQLiteDatabase;
@protocol SquiDBICursor;
@protocol SquiDBISQLitePreparedStatement;
@protocol SquiDBSquidTransactionListener;

@interface SquiDBIOSSQLiteDatabaseAdapter : NSObject < SquiDBISQLiteDatabase >

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBSQLiteDatabase:(SquiDBSQLiteDatabase *)db;

- (void)beginTransaction;

- (void)beginTransactionNonExclusive;

- (void)beginTransactionWithListenerWithSquiDBSquidTransactionListener:(id<SquiDBSquidTransactionListener>)listener;

- (void)beginTransactionWithListenerNonExclusiveWithSquiDBSquidTransactionListener:(id<SquiDBSquidTransactionListener>)listener;

- (void)close;

- (void)disableWriteAheadLogging;

- (jboolean)enableWriteAheadLogging;

- (void)endTransaction;

- (void)ensureSqlCompilesWithNSString:(NSString *)sql;

- (void)execSQLWithNSString:(NSString *)sql;

- (void)execSQLWithNSString:(NSString *)sql
          withNSObjectArray:(IOSObjectArray *)bindArgs;

- (jlong)executeInsertWithNSString:(NSString *)sql
                 withNSObjectArray:(IOSObjectArray *)bindArgs;

- (jint)executeUpdateDeleteWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)bindArgs;

- (jlong)getMaximumSize;

- (jlong)getPageSize;

- (NSString *)getPath;

- (jint)getVersion;

- (SquiDBSQLiteDatabase *)getWrappedObject;

- (jboolean)inTransaction;

- (jboolean)isDatabaseIntegrityOk;

- (jboolean)isDbLockedByCurrentThread;

- (jboolean)isOpen;

- (jboolean)isReadOnly;

- (jboolean)isWriteAheadLoggingEnabled;

- (jboolean)needUpgradeWithInt:(jint)newVersion;

- (id<SquiDBISQLitePreparedStatement>)prepareStatementWithNSString:(NSString *)sql;

- (id<SquiDBICursor>)rawQueryWithNSString:(NSString *)sql
                        withNSObjectArray:(IOSObjectArray *)bindArgs;

- (void)setForeignKeyConstraintsEnabledWithBoolean:(jboolean)enable;

- (void)setMaximumSizeWithLong:(jlong)numBytes;

- (void)setMaxSqlCacheSizeWithInt:(jint)cacheSize;

- (void)setPageSizeWithLong:(jlong)numBytes;

- (void)setTransactionSuccessful;

- (void)setVersionWithInt:(jint)version_;

- (jlong)simpleQueryForLongWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)bindArgs;

- (NSString *)simpleQueryForStringWithNSString:(NSString *)sql
                             withNSObjectArray:(IOSObjectArray *)bindArgs;

- (NSString *)description;

- (jboolean)yieldIfContendedSafely;

- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBIOSSQLiteDatabaseAdapter)

FOUNDATION_EXPORT void SquiDBIOSSQLiteDatabaseAdapter_initWithSquiDBSQLiteDatabase_(SquiDBIOSSQLiteDatabaseAdapter *self, SquiDBSQLiteDatabase *db);

FOUNDATION_EXPORT SquiDBIOSSQLiteDatabaseAdapter *new_SquiDBIOSSQLiteDatabaseAdapter_initWithSquiDBSQLiteDatabase_(SquiDBSQLiteDatabase *db) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBIOSSQLiteDatabaseAdapter *create_SquiDBIOSSQLiteDatabaseAdapter_initWithSquiDBSQLiteDatabase_(SquiDBSQLiteDatabase *db);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBIOSSQLiteDatabaseAdapter)

@compatibility_alias ComYahooSquidbIosIOSSQLiteDatabaseAdapter SquiDBIOSSQLiteDatabaseAdapter;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // IOSSQLiteDatabaseAdapter_H
