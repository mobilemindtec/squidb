//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DefaultArgumentResolver.java
//

#ifndef DefaultArgumentResolver_H
#define DefaultArgumentResolver_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "ArgumentResolver.h"
#include "J2ObjC_header.h"

@interface SquiDBDefaultArgumentResolver : NSObject < SquiDBArgumentResolver >

#pragma mark Public

- (instancetype __nonnull)init;

- (id)resolveArgumentWithId:(id)arg;

#pragma mark Protected

- (jboolean)canResolveCustomTypeWithId:(id)arg;

- (id)resolveCustomTypeWithId:(id)arg;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBDefaultArgumentResolver)

FOUNDATION_EXPORT void SquiDBDefaultArgumentResolver_init(SquiDBDefaultArgumentResolver *self);

FOUNDATION_EXPORT SquiDBDefaultArgumentResolver *new_SquiDBDefaultArgumentResolver_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBDefaultArgumentResolver *create_SquiDBDefaultArgumentResolver_init(void);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBDefaultArgumentResolver)

@compatibility_alias ComYahooSquidbSqlDefaultArgumentResolver SquiDBDefaultArgumentResolver;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DefaultArgumentResolver_H
