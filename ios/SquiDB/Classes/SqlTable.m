//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SqlTable.java
//

#include "DBObject.h"
#include "Field.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Property.h"
#include "SqlTable.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

@implementation ComYahooSquidbSqlSqlTable

- (instancetype)initWithIOSClass:(IOSClass *)modelClass
withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties
                    withNSString:(NSString *)expression {
  ComYahooSquidbSqlSqlTable_initWithIOSClass_withComYahooSquidbSqlPropertyArray_withNSString_(self, modelClass, properties, expression);
  return self;
}

- (instancetype)initWithIOSClass:(IOSClass *)modelClass
withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties
                    withNSString:(NSString *)expression
                    withNSString:(NSString *)qualifier {
  ComYahooSquidbSqlSqlTable_initWithIOSClass_withComYahooSquidbSqlPropertyArray_withNSString_withNSString_(self, modelClass, properties, expression, qualifier);
  return self;
}

- (IOSClass *)getModelClass {
  return modelClass_;
}

- (IOSObjectArray *)getProperties {
  return properties_;
}

- (IOSObjectArray *)qualifyFieldsWithComYahooSquidbSqlFieldArray:(IOSObjectArray *)fields {
  if (fields == nil) {
    return nil;
  }
  return [self qualifyFieldsWithJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_(fields)];
}

- (IOSObjectArray *)qualifyFieldsWithJavaUtilList:(id<JavaUtilList>)fields {
  if (fields == nil) {
    return nil;
  }
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:[fields size] type:ComYahooSquidbSqlField_class_()];
  jint i = 0;
  for (ComYahooSquidbSqlField * __strong field in fields) {
    (void) IOSObjectArray_Set(result, i, [self qualifyFieldWithComYahooSquidbSqlField:field]);
    i++;
  }
  return result;
}

- (ComYahooSquidbSqlField *)qualifyFieldWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field {
  if ([field isKindOfClass:[ComYahooSquidbSqlProperty class]]) {
    return [((ComYahooSquidbSqlProperty *) nil_chk(((ComYahooSquidbSqlProperty *) cast_chk(field, [ComYahooSquidbSqlProperty class])))) asSelectionFromTableWithComYahooSquidbSqlSqlTable:self withNSString:nil];
  }
  else {
    return ComYahooSquidbSqlField_fieldWithNSString_withNSString_([((ComYahooSquidbSqlField *) nil_chk(field)) getName], [self getName]);
  }
}

- (IOSObjectArray *)allFields {
  if (properties_ == nil) {
    return [IOSObjectArray newArrayWithLength:0 type:ComYahooSquidbSqlField_class_()];
  }
  return properties_;
}

- (ComYahooSquidbSqlSqlTable *)asWithNSString:(NSString *)newAlias {
  IOSObjectArray *newProperties = properties_ == nil ? nil : [IOSObjectArray newArrayWithLength:properties_->size_ type:ComYahooSquidbSqlProperty_class_()];
  ComYahooSquidbSqlSqlTable *result = [self asNewAliasWithPropertiesArrayWithNSString:newAlias withComYahooSquidbSqlPropertyArray:newProperties];
  if (newProperties != nil) {
    for (jint i = 0; i < newProperties->size_; i++) {
      (void) IOSObjectArray_Set(newProperties, i, [((ComYahooSquidbSqlSqlTable *) nil_chk(result)) qualifyFieldWithComYahooSquidbSqlField:IOSObjectArray_Get(nil_chk(properties_), i)]);
    }
  }
  return result;
}

- (ComYahooSquidbSqlSqlTable *)asNewAliasWithPropertiesArrayWithNSString:(NSString *)newAlias
                                      withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)newProperties {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, 3, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "[LComYahooSquidbSqlProperty;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "[LComYahooSquidbSqlField;", 0x81, 6, 7, -1, 8, -1, -1 },
    { NULL, "[LComYahooSquidbSqlField;", 0x1, 6, 9, -1, 10, -1, -1 },
    { NULL, "LComYahooSquidbSqlField;", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "[LComYahooSquidbSqlField;", 0x4, -1, -1, -1, 14, -1, -1 },
    { NULL, "LComYahooSquidbSqlSqlTable;", 0x1, 15, 16, -1, 17, -1, -1 },
    { NULL, "LComYahooSquidbSqlSqlTable;", 0x404, 18, 19, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withComYahooSquidbSqlPropertyArray:withNSString:);
  methods[1].selector = @selector(initWithIOSClass:withComYahooSquidbSqlPropertyArray:withNSString:withNSString:);
  methods[2].selector = @selector(getModelClass);
  methods[3].selector = @selector(getProperties);
  methods[4].selector = @selector(qualifyFieldsWithComYahooSquidbSqlFieldArray:);
  methods[5].selector = @selector(qualifyFieldsWithJavaUtilList:);
  methods[6].selector = @selector(qualifyFieldWithComYahooSquidbSqlField:);
  methods[7].selector = @selector(allFields);
  methods[8].selector = @selector(asWithNSString:);
  methods[9].selector = @selector(asNewAliasWithPropertiesArrayWithNSString:withComYahooSquidbSqlPropertyArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "modelClass_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 21, -1 },
    { "properties_", "[LComYahooSquidbSqlProperty;", .constantValue.asLong = 0, 0x14, -1, -1, 22, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;[LComYahooSquidbSqlProperty;LNSString;", "(Ljava/lang/Class<+TT;>;[Lcom/yahoo/squidb/sql/Property<*>;Ljava/lang/String;)V", "LIOSClass;[LComYahooSquidbSqlProperty;LNSString;LNSString;", "(Ljava/lang/Class<+TT;>;[Lcom/yahoo/squidb/sql/Property<*>;Ljava/lang/String;Ljava/lang/String;)V", "()Ljava/lang/Class<+TT;>;", "()[Lcom/yahoo/squidb/sql/Property<*>;", "qualifyFields", "[LComYahooSquidbSqlField;", "([Lcom/yahoo/squidb/sql/Field<*>;)[Lcom/yahoo/squidb/sql/Field<*>;", "LJavaUtilList;", "(Ljava/util/List<Lcom/yahoo/squidb/sql/Field<*>;>;)[Lcom/yahoo/squidb/sql/Field<*>;", "qualifyField", "LComYahooSquidbSqlField;", "<F:Lcom/yahoo/squidb/sql/Field<*>;>(TF;)TF;", "()[Lcom/yahoo/squidb/sql/Field<*>;", "as", "LNSString;", "(Ljava/lang/String;)Lcom/yahoo/squidb/sql/SqlTable<TT;>;", "asNewAliasWithPropertiesArray", "LNSString;[LComYahooSquidbSqlProperty;", "(Ljava/lang/String;[Lcom/yahoo/squidb/sql/Property<*>;)Lcom/yahoo/squidb/sql/SqlTable<TT;>;", "Ljava/lang/Class<+TT;>;", "[Lcom/yahoo/squidb/sql/Property<*>;", "<T:Lcom/yahoo/squidb/data/AbstractModel;>Lcom/yahoo/squidb/sql/DBObject<Lcom/yahoo/squidb/sql/SqlTable<TT;>;>;" };
  static const J2ObjcClassInfo _ComYahooSquidbSqlSqlTable = { "SqlTable", "com.yahoo.squidb.sql", ptrTable, methods, fields, 7, 0x401, 10, 2, -1, -1, -1, 23, -1 };
  return &_ComYahooSquidbSqlSqlTable;
}

@end

void ComYahooSquidbSqlSqlTable_initWithIOSClass_withComYahooSquidbSqlPropertyArray_withNSString_(ComYahooSquidbSqlSqlTable *self, IOSClass *modelClass, IOSObjectArray *properties, NSString *expression) {
  ComYahooSquidbSqlDBObject_initWithNSString_(self, expression);
  self->modelClass_ = modelClass;
  self->properties_ = properties;
}

void ComYahooSquidbSqlSqlTable_initWithIOSClass_withComYahooSquidbSqlPropertyArray_withNSString_withNSString_(ComYahooSquidbSqlSqlTable *self, IOSClass *modelClass, IOSObjectArray *properties, NSString *expression, NSString *qualifier) {
  ComYahooSquidbSqlDBObject_initWithNSString_withNSString_(self, expression, qualifier);
  self->modelClass_ = modelClass;
  self->properties_ = properties;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlSqlTable)
