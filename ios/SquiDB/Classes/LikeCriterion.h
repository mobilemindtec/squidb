//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/LikeCriterion.java
//

#ifndef LikeCriterion_H
#define LikeCriterion_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "BinaryCriterion.h"
#include "J2ObjC_header.h"

@class SquiDBField;
@class SquiDBOperator;
@class SquiDBSqlBuilder;

@interface SquiDBLikeCriterion : SquiDBBinaryCriterion

#pragma mark Protected

- (void)afterPopulateOperatorWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                      withBoolean:(jboolean)forSqlValidation;

- (SquiDBBinaryCriterion *)constructNegatedCriterionWithSquiDBOperator:(SquiDBOperator *)negatedOperator;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivateWithSquiDBField:(SquiDBField *)expression
                                         withSquiDBOperator:(SquiDBOperator *)operator_
                                                     withId:(id)value
                                                   withChar:(jchar)escape;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivateWithSquiDBField:(SquiDBField *)arg0
                                         withSquiDBOperator:(SquiDBOperator *)arg1
                                                     withId:(id)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBLikeCriterion)

FOUNDATION_EXPORT void SquiDBLikeCriterion_initPackagePrivateWithSquiDBField_withSquiDBOperator_withId_withChar_(SquiDBLikeCriterion *self, SquiDBField *expression, SquiDBOperator *operator_, id value, jchar escape);

FOUNDATION_EXPORT SquiDBLikeCriterion *new_SquiDBLikeCriterion_initPackagePrivateWithSquiDBField_withSquiDBOperator_withId_withChar_(SquiDBField *expression, SquiDBOperator *operator_, id value, jchar escape) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBLikeCriterion *create_SquiDBLikeCriterion_initPackagePrivateWithSquiDBField_withSquiDBOperator_withId_withChar_(SquiDBField *expression, SquiDBOperator *operator_, id value, jchar escape);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBLikeCriterion)

@compatibility_alias ComYahooSquidbSqlLikeCriterion SquiDBLikeCriterion;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // LikeCriterion_H
