//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CompoundSelect.java
//

#include "CompilableWithArguments.h"
#include "CompoundSelect.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Query.h"
#include "SqlBuilder.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"

@class SquiDBCompoundSelect_CompoundSelectOperator;

@interface SquiDBCompoundSelect () {
 @public
  SquiDBCompoundSelect_CompoundSelectOperator *operator__;
}

- (instancetype)initWithSquiDBCompoundSelect_CompoundSelectOperator:(SquiDBCompoundSelect_CompoundSelectOperator *)operator_
                                                    withSquiDBQuery:(SquiDBQuery *)query;

@end

J2OBJC_FIELD_SETTER(SquiDBCompoundSelect, operator__, SquiDBCompoundSelect_CompoundSelectOperator *)

__attribute__((unused)) static void SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(SquiDBCompoundSelect *self, SquiDBCompoundSelect_CompoundSelectOperator *operator_, SquiDBQuery *query);

__attribute__((unused)) static SquiDBCompoundSelect *new_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(SquiDBCompoundSelect_CompoundSelectOperator *operator_, SquiDBQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static SquiDBCompoundSelect *create_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(SquiDBCompoundSelect_CompoundSelectOperator *operator_, SquiDBQuery *query);

typedef NS_ENUM(NSUInteger, SquiDBCompoundSelect_CompoundSelectOperator_Enum) {
  SquiDBCompoundSelect_CompoundSelectOperator_Enum_UNION = 0,
  SquiDBCompoundSelect_CompoundSelectOperator_Enum_UNION_ALL = 1,
  SquiDBCompoundSelect_CompoundSelectOperator_Enum_INTERSECT = 2,
  SquiDBCompoundSelect_CompoundSelectOperator_Enum_EXCEPT = 3,
};

@interface SquiDBCompoundSelect_CompoundSelectOperator : JavaLangEnum {
 @public
  NSString *expression_;
}

@property (readonly, class, nonnull) SquiDBCompoundSelect_CompoundSelectOperator *UNION NS_SWIFT_NAME(UNION);
@property (readonly, class, nonnull) SquiDBCompoundSelect_CompoundSelectOperator *UNION_ALL NS_SWIFT_NAME(UNION_ALL);
@property (readonly, class, nonnull) SquiDBCompoundSelect_CompoundSelectOperator *INTERSECT NS_SWIFT_NAME(INTERSECT);
@property (readonly, class, nonnull) SquiDBCompoundSelect_CompoundSelectOperator *EXCEPT NS_SWIFT_NAME(EXCEPT);
- (NSString *)description;

+ (IOSObjectArray *)values;

+ (SquiDBCompoundSelect_CompoundSelectOperator *)valueOfWithNSString:(NSString *)name;

- (SquiDBCompoundSelect_CompoundSelectOperator_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(SquiDBCompoundSelect_CompoundSelectOperator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_values_[];

inline SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_get_UNION(void);
J2OBJC_ENUM_CONSTANT(SquiDBCompoundSelect_CompoundSelectOperator, UNION)

inline SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_get_UNION_ALL(void);
J2OBJC_ENUM_CONSTANT(SquiDBCompoundSelect_CompoundSelectOperator, UNION_ALL)

inline SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_get_INTERSECT(void);
J2OBJC_ENUM_CONSTANT(SquiDBCompoundSelect_CompoundSelectOperator, INTERSECT)

inline SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_get_EXCEPT(void);
J2OBJC_ENUM_CONSTANT(SquiDBCompoundSelect_CompoundSelectOperator, EXCEPT)

J2OBJC_FIELD_SETTER(SquiDBCompoundSelect_CompoundSelectOperator, expression_, NSString *)

__attribute__((unused)) static void SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(SquiDBCompoundSelect_CompoundSelectOperator *self, NSString *expression, NSString *__name, jint __ordinal);

__attribute__((unused)) static SquiDBCompoundSelect_CompoundSelectOperator *new_SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(NSString *expression, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static IOSObjectArray *SquiDBCompoundSelect_CompoundSelectOperator_values(void);

__attribute__((unused)) static SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBCompoundSelect_CompoundSelectOperator)

@implementation SquiDBCompoundSelect

- (instancetype)initWithSquiDBCompoundSelect_CompoundSelectOperator:(SquiDBCompoundSelect_CompoundSelectOperator *)operator_
                                                    withSquiDBQuery:(SquiDBQuery *)query {
  SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(self, operator_, query);
  return self;
}

+ (SquiDBCompoundSelect *)union__WithSquiDBQuery:(SquiDBQuery *)query {
  return SquiDBCompoundSelect_union__WithSquiDBQuery_(query);
}

+ (SquiDBCompoundSelect *)unionAllWithSquiDBQuery:(SquiDBQuery *)query {
  return SquiDBCompoundSelect_unionAllWithSquiDBQuery_(query);
}

+ (SquiDBCompoundSelect *)intersectWithSquiDBQuery:(SquiDBQuery *)query {
  return SquiDBCompoundSelect_intersectWithSquiDBQuery_(query);
}

+ (SquiDBCompoundSelect *)exceptWithSquiDBQuery:(SquiDBQuery *)query {
  return SquiDBCompoundSelect_exceptWithSquiDBQuery_(query);
}

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation {
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(((SquiDBSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:[((SquiDBCompoundSelect_CompoundSelectOperator *) nil_chk(operator__)) description]])) appendWithNSString:@" "];
  [((SquiDBQuery *) nil_chk(query_)) appendToSqlBuilderWithSquiDBSqlBuilder:builder withBoolean:forSqlValidation];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LSquiDBCompoundSelect;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LSquiDBCompoundSelect;", 0x9, 3, 2, -1, -1, -1, -1 },
    { NULL, "LSquiDBCompoundSelect;", 0x9, 4, 2, -1, -1, -1, -1 },
    { NULL, "LSquiDBCompoundSelect;", 0x9, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithSquiDBCompoundSelect_CompoundSelectOperator:withSquiDBQuery:);
  methods[1].selector = @selector(union__WithSquiDBQuery:);
  methods[2].selector = @selector(unionAllWithSquiDBQuery:);
  methods[3].selector = @selector(intersectWithSquiDBQuery:);
  methods[4].selector = @selector(exceptWithSquiDBQuery:);
  methods[5].selector = @selector(appendToSqlBuilderWithSquiDBSqlBuilder:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "operator__", "LSquiDBCompoundSelect_CompoundSelectOperator;", .constantValue.asLong = 0, 0x12, 8, -1, -1, -1 },
    { "query_", "LSquiDBQuery;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LSquiDBCompoundSelect_CompoundSelectOperator;LSquiDBQuery;", "union", "LSquiDBQuery;", "unionAll", "intersect", "except", "appendToSqlBuilder", "LSquiDBSqlBuilder;Z", "operator", "LSquiDBCompoundSelect_CompoundSelectOperator;" };
  static const J2ObjcClassInfo _SquiDBCompoundSelect = { "CompoundSelect", "com.yahoo.squidb.sql", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, 9, -1, -1, -1 };
  return &_SquiDBCompoundSelect;
}

@end

void SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(SquiDBCompoundSelect *self, SquiDBCompoundSelect_CompoundSelectOperator *operator_, SquiDBQuery *query) {
  SquiDBCompilableWithArguments_initPackagePrivate(self);
  self->operator__ = operator_;
  self->query_ = query;
}

SquiDBCompoundSelect *new_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(SquiDBCompoundSelect_CompoundSelectOperator *operator_, SquiDBQuery *query) {
  J2OBJC_NEW_IMPL(SquiDBCompoundSelect, initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_, operator_, query)
}

SquiDBCompoundSelect *create_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(SquiDBCompoundSelect_CompoundSelectOperator *operator_, SquiDBQuery *query) {
  J2OBJC_CREATE_IMPL(SquiDBCompoundSelect, initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_, operator_, query)
}

SquiDBCompoundSelect *SquiDBCompoundSelect_union__WithSquiDBQuery_(SquiDBQuery *query) {
  SquiDBCompoundSelect_initialize();
  return new_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(JreLoadEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION), query);
}

SquiDBCompoundSelect *SquiDBCompoundSelect_unionAllWithSquiDBQuery_(SquiDBQuery *query) {
  SquiDBCompoundSelect_initialize();
  return new_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(JreLoadEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION_ALL), query);
}

SquiDBCompoundSelect *SquiDBCompoundSelect_intersectWithSquiDBQuery_(SquiDBQuery *query) {
  SquiDBCompoundSelect_initialize();
  return new_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(JreLoadEnum(SquiDBCompoundSelect_CompoundSelectOperator, INTERSECT), query);
}

SquiDBCompoundSelect *SquiDBCompoundSelect_exceptWithSquiDBQuery_(SquiDBQuery *query) {
  SquiDBCompoundSelect_initialize();
  return new_SquiDBCompoundSelect_initWithSquiDBCompoundSelect_CompoundSelectOperator_withSquiDBQuery_(JreLoadEnum(SquiDBCompoundSelect_CompoundSelectOperator, EXCEPT), query);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBCompoundSelect)

J2OBJC_NAME_MAPPING(SquiDBCompoundSelect, "com.yahoo.squidb.sql", "SquiDB")

J2OBJC_INITIALIZED_DEFN(SquiDBCompoundSelect_CompoundSelectOperator)

SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_values_[4];

@implementation SquiDBCompoundSelect_CompoundSelectOperator

+ (SquiDBCompoundSelect_CompoundSelectOperator *)UNION {
  return JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION);
}

+ (SquiDBCompoundSelect_CompoundSelectOperator *)UNION_ALL {
  return JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION_ALL);
}

+ (SquiDBCompoundSelect_CompoundSelectOperator *)INTERSECT {
  return JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, INTERSECT);
}

+ (SquiDBCompoundSelect_CompoundSelectOperator *)EXCEPT {
  return JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, EXCEPT);
}

- (NSString *)description {
  return expression_;
}

+ (IOSObjectArray *)values {
  return SquiDBCompoundSelect_CompoundSelectOperator_values();
}

+ (SquiDBCompoundSelect_CompoundSelectOperator *)valueOfWithNSString:(NSString *)name {
  return SquiDBCompoundSelect_CompoundSelectOperator_valueOfWithNSString_(name);
}

- (SquiDBCompoundSelect_CompoundSelectOperator_Enum)toNSEnum {
  return (SquiDBCompoundSelect_CompoundSelectOperator_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "[LSquiDBCompoundSelect_CompoundSelectOperator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSquiDBCompoundSelect_CompoundSelectOperator;", 0x9, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNION", "LSquiDBCompoundSelect_CompoundSelectOperator;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "UNION_ALL", "LSquiDBCompoundSelect_CompoundSelectOperator;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "INTERSECT", "LSquiDBCompoundSelect_CompoundSelectOperator;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "EXCEPT", "LSquiDBCompoundSelect_CompoundSelectOperator;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "expression_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "valueOf", "LNSString;", &JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION), &JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION_ALL), &JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, INTERSECT), &JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, EXCEPT), "LSquiDBCompoundSelect;", "Ljava/lang/Enum<Lcom/yahoo/squidb/sql/CompoundSelect$CompoundSelectOperator;>;" };
  static const J2ObjcClassInfo _SquiDBCompoundSelect_CompoundSelectOperator = { "CompoundSelectOperator", "com.yahoo.squidb.sql", ptrTable, methods, fields, 7, 0x401a, 3, 5, 7, -1, -1, 8, -1 };
  return &_SquiDBCompoundSelect_CompoundSelectOperator;
}

+ (void)initialize {
  if (self == [SquiDBCompoundSelect_CompoundSelectOperator class]) {
    JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION) = new_SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(@"UNION", JreEnumConstantName(SquiDBCompoundSelect_CompoundSelectOperator_class_(), 0), 0);
    JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, UNION_ALL) = new_SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(@"UNION ALL", JreEnumConstantName(SquiDBCompoundSelect_CompoundSelectOperator_class_(), 1), 1);
    JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, INTERSECT) = new_SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(@"INTERSECT", JreEnumConstantName(SquiDBCompoundSelect_CompoundSelectOperator_class_(), 2), 2);
    JreEnum(SquiDBCompoundSelect_CompoundSelectOperator, EXCEPT) = new_SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(@"EXCEPT", JreEnumConstantName(SquiDBCompoundSelect_CompoundSelectOperator_class_(), 3), 3);
    J2OBJC_SET_INITIALIZED(SquiDBCompoundSelect_CompoundSelectOperator)
  }
}

@end

void SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(SquiDBCompoundSelect_CompoundSelectOperator *self, NSString *expression, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->expression_ = expression;
}

SquiDBCompoundSelect_CompoundSelectOperator *new_SquiDBCompoundSelect_CompoundSelectOperator_initWithNSString_withNSString_withInt_(NSString *expression, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(SquiDBCompoundSelect_CompoundSelectOperator, initWithNSString_withNSString_withInt_, expression, __name, __ordinal)
}

IOSObjectArray *SquiDBCompoundSelect_CompoundSelectOperator_values() {
  SquiDBCompoundSelect_CompoundSelectOperator_initialize();
  return [IOSObjectArray arrayWithObjects:SquiDBCompoundSelect_CompoundSelectOperator_values_ count:4 type:SquiDBCompoundSelect_CompoundSelectOperator_class_()];
}

SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_valueOfWithNSString_(NSString *name) {
  SquiDBCompoundSelect_CompoundSelectOperator_initialize();
  for (int i = 0; i < 4; i++) {
    SquiDBCompoundSelect_CompoundSelectOperator *e = SquiDBCompoundSelect_CompoundSelectOperator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

SquiDBCompoundSelect_CompoundSelectOperator *SquiDBCompoundSelect_CompoundSelectOperator_fromOrdinal(NSUInteger ordinal) {
  SquiDBCompoundSelect_CompoundSelectOperator_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return SquiDBCompoundSelect_CompoundSelectOperator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBCompoundSelect_CompoundSelectOperator)
