//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SQLiteStatement.java
//

#ifndef SQLiteStatement_H
#define SQLiteStatement_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "SQLiteProgram.h"

@class IOSObjectArray;
@class SquiDBSQLiteDatabase;

@interface SquiDBSQLiteStatement : SquiDBSQLiteProgram

#pragma mark Public

- (void)execute;

- (jlong)executeInsert;

- (jint)executeUpdateDelete;

- (jlong)simpleQueryForLong;

- (NSString *)simpleQueryForString;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithSquiDBSQLiteDatabase:(SquiDBSQLiteDatabase *)db
                                          withNSString:(NSString *)sql
                                     withNSObjectArray:(IOSObjectArray *)bindArgs;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBSQLiteStatement)

FOUNDATION_EXPORT void SquiDBSQLiteStatement_initWithSquiDBSQLiteDatabase_withNSString_withNSObjectArray_(SquiDBSQLiteStatement *self, SquiDBSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);

FOUNDATION_EXPORT SquiDBSQLiteStatement *new_SquiDBSQLiteStatement_initWithSquiDBSQLiteDatabase_withNSString_withNSObjectArray_(SquiDBSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSQLiteStatement *create_SquiDBSQLiteStatement_initWithSquiDBSQLiteDatabase_withNSString_withNSObjectArray_(SquiDBSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSQLiteStatement)

@compatibility_alias ComYahooAndroidSqliteSQLiteStatement SquiDBSQLiteStatement;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SQLiteStatement_H
