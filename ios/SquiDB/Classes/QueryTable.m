//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/QueryTable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Query.h"
#include "QueryTable.h"
#include "SqlTable.h"
#include "java/util/List.h"

@implementation SquiDBQueryTable

- (instancetype)initPackagePrivateWithIOSClass:(IOSClass *)modelClass
                       withSquiDBPropertyArray:(IOSObjectArray *)properties
                                  withNSString:(NSString *)name
                                  withNSString:(NSString *)databaseName
                               withSquiDBQuery:(SquiDBQuery *)query {
  SquiDBQueryTable_initPackagePrivateWithIOSClass_withSquiDBPropertyArray_withNSString_withNSString_withSquiDBQuery_(self, modelClass, properties, name, databaseName, query);
  return self;
}

- (IOSObjectArray *)qualifiedFields {
  return [self qualifyFieldsWithJavaUtilList:[((SquiDBQuery *) nil_chk(query_)) getFields]];
}

- (IOSObjectArray *)allFields {
  if (properties_ != nil) {
    return properties_;
  }
  else {
    return [self qualifiedFields];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "[LSquiDBField;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "[LSquiDBField;", 0x4, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithIOSClass:withSquiDBPropertyArray:withNSString:withNSString:withSquiDBQuery:);
  methods[1].selector = @selector(qualifiedFields);
  methods[2].selector = @selector(allFields);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LSquiDBQuery;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;[LSquiDBProperty;LNSString;LNSString;LSquiDBQuery;", "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/ViewModel;>;[Lcom/yahoo/squidb/sql/Property<*>;Ljava/lang/String;Ljava/lang/String;Lcom/yahoo/squidb/sql/Query;)V", "()[Lcom/yahoo/squidb/sql/Field<*>;", "Lcom/yahoo/squidb/sql/SqlTable<Lcom/yahoo/squidb/data/ViewModel;>;" };
  static const J2ObjcClassInfo _SquiDBQueryTable = { "QueryTable", "com.yahoo.squidb.sql", ptrTable, methods, fields, 7, 0x400, 3, 1, -1, -1, -1, 3, -1 };
  return &_SquiDBQueryTable;
}

@end

void SquiDBQueryTable_initPackagePrivateWithIOSClass_withSquiDBPropertyArray_withNSString_withNSString_withSquiDBQuery_(SquiDBQueryTable *self, IOSClass *modelClass, IOSObjectArray *properties, NSString *name, NSString *databaseName, SquiDBQuery *query) {
  SquiDBSqlTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withNSString_(self, modelClass, properties, name, databaseName);
  self->query_ = query;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBQueryTable)
