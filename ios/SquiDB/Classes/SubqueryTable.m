//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SubqueryTable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Query.h"
#include "QueryTable.h"
#include "SqlBuilder.h"
#include "SqlTable.h"
#include "SubqueryTable.h"
#include "java/lang/StringBuilder.h"

@interface SquiDBSubqueryTable ()

- (instancetype)initWithIOSClass:(IOSClass *)modelClass
         withSquiDBPropertyArray:(IOSObjectArray *)properties
                    withNSString:(NSString *)name
                 withSquiDBQuery:(SquiDBQuery *)query;

@end

__attribute__((unused)) static void SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(SquiDBSubqueryTable *self, IOSClass *modelClass, IOSObjectArray *properties, NSString *name, SquiDBQuery *query);

__attribute__((unused)) static SquiDBSubqueryTable *new_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(IOSClass *modelClass, IOSObjectArray *properties, NSString *name, SquiDBQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static SquiDBSubqueryTable *create_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(IOSClass *modelClass, IOSObjectArray *properties, NSString *name, SquiDBQuery *query);

@implementation SquiDBSubqueryTable

- (instancetype)initWithIOSClass:(IOSClass *)modelClass
         withSquiDBPropertyArray:(IOSObjectArray *)properties
                    withNSString:(NSString *)name
                 withSquiDBQuery:(SquiDBQuery *)query {
  SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(self, modelClass, properties, name, query);
  return self;
}

+ (SquiDBSubqueryTable *)fromQueryWithSquiDBQuery:(SquiDBQuery *)query
                                     withNSString:(NSString *)name {
  return SquiDBSubqueryTable_fromQueryWithSquiDBQuery_withNSString_(query, name);
}

+ (SquiDBSubqueryTable *)fromQueryWithSquiDBQuery:(SquiDBQuery *)query
                                     withNSString:(NSString *)name
                                     withIOSClass:(IOSClass *)modelClass
                          withSquiDBPropertyArray:(IOSObjectArray *)properties {
  return SquiDBSubqueryTable_fromQueryWithSquiDBQuery_withNSString_withIOSClass_withSquiDBPropertyArray_(query, name, modelClass, properties);
}

- (SquiDBSubqueryTable *)asWithNSString:(NSString *)newAlias {
  return (SquiDBSubqueryTable *) cast_chk([super asWithNSString:newAlias], [SquiDBSubqueryTable class]);
}

- (SquiDBSubqueryTable *)asNewAliasWithPropertiesArrayWithNSString:(NSString *)newAlias
                                           withSquiDBPropertyArray:(IOSObjectArray *)newProperties {
  return new_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(modelClass_, newProperties, newAlias, query_);
}

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation {
  (void) [((JavaLangStringBuilder *) nil_chk(((SquiDBSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:@"("];
  [((SquiDBQuery *) nil_chk(query_)) appendToSqlBuilderWithSquiDBSqlBuilder:builder withBoolean:forSqlValidation];
  (void) [((JavaLangStringBuilder *) nil_chk([builder->sql_ appendWithNSString:@") AS "])) appendWithNSString:[self getName]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LSquiDBSubqueryTable;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LSquiDBSubqueryTable;", 0x9, 2, 4, -1, 5, -1, -1 },
    { NULL, "LSquiDBSubqueryTable;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LSquiDBSubqueryTable;", 0x4, 8, 9, -1, 10, -1, -1 },
    { NULL, "V", 0x0, 11, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withSquiDBPropertyArray:withNSString:withSquiDBQuery:);
  methods[1].selector = @selector(fromQueryWithSquiDBQuery:withNSString:);
  methods[2].selector = @selector(fromQueryWithSquiDBQuery:withNSString:withIOSClass:withSquiDBPropertyArray:);
  methods[3].selector = @selector(asWithNSString:);
  methods[4].selector = @selector(asNewAliasWithPropertiesArrayWithNSString:withSquiDBPropertyArray:);
  methods[5].selector = @selector(appendToSqlBuilderWithSquiDBSqlBuilder:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;[LSquiDBProperty;LNSString;LSquiDBQuery;", "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/ViewModel;>;[Lcom/yahoo/squidb/sql/Property<*>;Ljava/lang/String;Lcom/yahoo/squidb/sql/Query;)V", "fromQuery", "LSquiDBQuery;LNSString;", "LSquiDBQuery;LNSString;LIOSClass;[LSquiDBProperty;", "(Lcom/yahoo/squidb/sql/Query;Ljava/lang/String;Ljava/lang/Class<+Lcom/yahoo/squidb/data/ViewModel;>;[Lcom/yahoo/squidb/sql/Property<*>;)Lcom/yahoo/squidb/sql/SubqueryTable;", "as", "LNSString;", "asNewAliasWithPropertiesArray", "LNSString;[LSquiDBProperty;", "(Ljava/lang/String;[Lcom/yahoo/squidb/sql/Property<*>;)Lcom/yahoo/squidb/sql/SubqueryTable;", "appendToSqlBuilder", "LSquiDBSqlBuilder;Z" };
  static const J2ObjcClassInfo _SquiDBSubqueryTable = { "SubqueryTable", "com.yahoo.squidb.sql", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_SquiDBSubqueryTable;
}

@end

void SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(SquiDBSubqueryTable *self, IOSClass *modelClass, IOSObjectArray *properties, NSString *name, SquiDBQuery *query) {
  SquiDBQueryTable_initPackagePrivateWithIOSClass_withSquiDBPropertyArray_withNSString_withNSString_withSquiDBQuery_(self, modelClass, properties, name, nil, query);
}

SquiDBSubqueryTable *new_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(IOSClass *modelClass, IOSObjectArray *properties, NSString *name, SquiDBQuery *query) {
  J2OBJC_NEW_IMPL(SquiDBSubqueryTable, initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_, modelClass, properties, name, query)
}

SquiDBSubqueryTable *create_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(IOSClass *modelClass, IOSObjectArray *properties, NSString *name, SquiDBQuery *query) {
  J2OBJC_CREATE_IMPL(SquiDBSubqueryTable, initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_, modelClass, properties, name, query)
}

SquiDBSubqueryTable *SquiDBSubqueryTable_fromQueryWithSquiDBQuery_withNSString_(SquiDBQuery *query, NSString *name) {
  SquiDBSubqueryTable_initialize();
  return new_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(nil, nil, name, query);
}

SquiDBSubqueryTable *SquiDBSubqueryTable_fromQueryWithSquiDBQuery_withNSString_withIOSClass_withSquiDBPropertyArray_(SquiDBQuery *query, NSString *name, IOSClass *modelClass, IOSObjectArray *properties) {
  SquiDBSubqueryTable_initialize();
  return new_SquiDBSubqueryTable_initWithIOSClass_withSquiDBPropertyArray_withNSString_withSquiDBQuery_(modelClass, properties, name, query);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBSubqueryTable)

J2OBJC_NAME_MAPPING(SquiDBSubqueryTable, "com.yahoo.squidb.sql", "SquiDB")
