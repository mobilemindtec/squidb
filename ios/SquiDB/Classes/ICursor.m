//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ICursor.java
//

#include "ICursor.h"
#include "J2ObjC_source.h"

@implementation SquiDBICursor

+ (jint)FIELD_TYPE_NULL {
  return SquiDBICursor_FIELD_TYPE_NULL;
}

+ (jint)FIELD_TYPE_INTEGER {
  return SquiDBICursor_FIELD_TYPE_INTEGER;
}

+ (jint)FIELD_TYPE_FLOAT {
  return SquiDBICursor_FIELD_TYPE_FLOAT;
}

+ (jint)FIELD_TYPE_STRING {
  return SquiDBICursor_FIELD_TYPE_STRING;
}

+ (jint)FIELD_TYPE_BLOB {
  return SquiDBICursor_FIELD_TYPE_BLOB;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 5, 4, 6, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x401, 8, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 9, 1, -1, -1, -1, -1 },
    { NULL, "S", 0x401, 10, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 11, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 12, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x401, 13, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, 14, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 15, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 16, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getCount);
  methods[1].selector = @selector(getPosition);
  methods[2].selector = @selector(moveWithInt:);
  methods[3].selector = @selector(moveToPositionWithInt:);
  methods[4].selector = @selector(moveToFirst);
  methods[5].selector = @selector(moveToLast);
  methods[6].selector = @selector(moveToNext);
  methods[7].selector = @selector(moveToPrevious);
  methods[8].selector = @selector(isFirst);
  methods[9].selector = @selector(isLast);
  methods[10].selector = @selector(isBeforeFirst);
  methods[11].selector = @selector(isAfterLast);
  methods[12].selector = @selector(getColumnIndexWithNSString:);
  methods[13].selector = @selector(getColumnIndexOrThrowWithNSString:);
  methods[14].selector = @selector(getColumnNameWithInt:);
  methods[15].selector = @selector(getColumnNames);
  methods[16].selector = @selector(getColumnCount);
  methods[17].selector = @selector(getBlobWithInt:);
  methods[18].selector = @selector(getStringWithInt:);
  methods[19].selector = @selector(getShortWithInt:);
  methods[20].selector = @selector(getIntWithInt:);
  methods[21].selector = @selector(getLongWithInt:);
  methods[22].selector = @selector(getFloatWithInt:);
  methods[23].selector = @selector(getDoubleWithInt:);
  methods[24].selector = @selector(getTypeWithInt:);
  methods[25].selector = @selector(isNullWithInt:);
  methods[26].selector = @selector(close);
  methods[27].selector = @selector(isClosed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIELD_TYPE_NULL", "I", .constantValue.asInt = SquiDBICursor_FIELD_TYPE_NULL, 0x19, -1, -1, -1, -1 },
    { "FIELD_TYPE_INTEGER", "I", .constantValue.asInt = SquiDBICursor_FIELD_TYPE_INTEGER, 0x19, -1, -1, -1, -1 },
    { "FIELD_TYPE_FLOAT", "I", .constantValue.asInt = SquiDBICursor_FIELD_TYPE_FLOAT, 0x19, -1, -1, -1, -1 },
    { "FIELD_TYPE_STRING", "I", .constantValue.asInt = SquiDBICursor_FIELD_TYPE_STRING, 0x19, -1, -1, -1, -1 },
    { "FIELD_TYPE_BLOB", "I", .constantValue.asInt = SquiDBICursor_FIELD_TYPE_BLOB, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "move", "I", "moveToPosition", "getColumnIndex", "LNSString;", "getColumnIndexOrThrow", "LJavaLangIllegalArgumentException;", "getColumnName", "getBlob", "getString", "getShort", "getInt", "getLong", "getFloat", "getDouble", "getType", "isNull" };
  static const J2ObjcClassInfo _SquiDBICursor = { "ICursor", "com.yahoo.squidb.data", ptrTable, methods, fields, 7, 0x609, 28, 5, -1, -1, -1, -1, -1 };
  return &_SquiDBICursor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(SquiDBICursor)

J2OBJC_NAME_MAPPING(SquiDBICursor, "com.yahoo.squidb.data", "SquiDB")
