//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/NegationCriterion.java
//

#ifndef NegationCriterion_H
#define NegationCriterion_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "Criterion.h"
#include "J2ObjC_header.h"

@class SquiDBOperator;
@class SquiDBSqlBuilder;

@interface SquiDBNegationCriterion : SquiDBCriterion

#pragma mark Public

- (SquiDBCriterion *)negate;

#pragma mark Protected

- (void)populateWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                         withBoolean:(jboolean)forSqlValidation;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivateWithSquiDBCriterion:(SquiDBCriterion *)toNegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithSquiDBOperator:(SquiDBOperator *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBNegationCriterion)

FOUNDATION_EXPORT void SquiDBNegationCriterion_initPackagePrivateWithSquiDBCriterion_(SquiDBNegationCriterion *self, SquiDBCriterion *toNegate);

FOUNDATION_EXPORT SquiDBNegationCriterion *new_SquiDBNegationCriterion_initPackagePrivateWithSquiDBCriterion_(SquiDBCriterion *toNegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBNegationCriterion *create_SquiDBNegationCriterion_initPackagePrivateWithSquiDBCriterion_(SquiDBCriterion *toNegate);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBNegationCriterion)

@compatibility_alias ComYahooSquidbSqlNegationCriterion SquiDBNegationCriterion;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // NegationCriterion_H
