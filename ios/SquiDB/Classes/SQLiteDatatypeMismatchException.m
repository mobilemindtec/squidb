//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SQLiteDatatypeMismatchException.java
//

#include "J2ObjC_source.h"
#include "SQLiteDatatypeMismatchException.h"
#include "SQLiteException.h"

@implementation SquiDBSQLiteDatatypeMismatchException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SquiDBSQLiteDatatypeMismatchException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)error {
  SquiDBSQLiteDatatypeMismatchException_initWithNSString_(self, error);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _SquiDBSQLiteDatatypeMismatchException = { "SQLiteDatatypeMismatchException", "com.yahoo.android.sqlite", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_SquiDBSQLiteDatatypeMismatchException;
}

@end

void SquiDBSQLiteDatatypeMismatchException_init(SquiDBSQLiteDatatypeMismatchException *self) {
  SquiDBSQLiteException_init(self);
}

SquiDBSQLiteDatatypeMismatchException *new_SquiDBSQLiteDatatypeMismatchException_init() {
  J2OBJC_NEW_IMPL(SquiDBSQLiteDatatypeMismatchException, init)
}

SquiDBSQLiteDatatypeMismatchException *create_SquiDBSQLiteDatatypeMismatchException_init() {
  J2OBJC_CREATE_IMPL(SquiDBSQLiteDatatypeMismatchException, init)
}

void SquiDBSQLiteDatatypeMismatchException_initWithNSString_(SquiDBSQLiteDatatypeMismatchException *self, NSString *error) {
  SquiDBSQLiteException_initWithNSString_(self, error);
}

SquiDBSQLiteDatatypeMismatchException *new_SquiDBSQLiteDatatypeMismatchException_initWithNSString_(NSString *error) {
  J2OBJC_NEW_IMPL(SquiDBSQLiteDatatypeMismatchException, initWithNSString_, error)
}

SquiDBSQLiteDatatypeMismatchException *create_SquiDBSQLiteDatatypeMismatchException_initWithNSString_(NSString *error) {
  J2OBJC_CREATE_IMPL(SquiDBSQLiteDatatypeMismatchException, initWithNSString_, error)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBSQLiteDatatypeMismatchException)

J2OBJC_NAME_MAPPING(SquiDBSQLiteDatatypeMismatchException, "com.yahoo.android.sqlite", "SquiDB")
