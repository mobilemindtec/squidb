//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CursorWindow.java
//

#include "CloseGuard.h"
#include "CursorWindow.h"
#include "CursorWindowAllocationException.h"
#include "ICursor.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SQLiteClosable.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"

#import "CursorWindowNative.h"

@interface ComYahooAndroidSqliteCursorWindow () {
 @public
  jint mStartPos_;
  NSString *mName_;
  ComYahooAndroidSqliteCloseGuard *mCloseGuard_;
}

+ (id)nativeCreateWithNSString:(NSString *)name
                       withInt:(jint)cursorWindowSize;

+ (void)nativeDisposeWithId:(id)windowPtr;

+ (void)nativeClearWithId:(id)windowPtr;

+ (jint)nativeGetNumRowsWithId:(id)windowPtr;

+ (jboolean)nativeSetNumColumnsWithId:(id)windowPtr
                              withInt:(jint)columnNum;

+ (jboolean)nativeAllocRowWithId:(id)windowPtr;

+ (void)nativeFreeLastRowWithId:(id)windowPtr;

+ (jint)nativeGetTypeWithId:(id)windowPtr
                    withInt:(jint)row
                    withInt:(jint)column;

+ (IOSByteArray *)nativeGetBlobWithId:(id)windowPtr
                              withInt:(jint)row
                              withInt:(jint)column;

+ (NSString *)nativeGetStringWithId:(id)windowPtr
                            withInt:(jint)row
                            withInt:(jint)column;

+ (jlong)nativeGetLongWithId:(id)windowPtr
                     withInt:(jint)row
                     withInt:(jint)column;

+ (jdouble)nativeGetDoubleWithId:(id)windowPtr
                         withInt:(jint)row
                         withInt:(jint)column;

+ (jboolean)nativePutBlobWithId:(id)windowPtr
                  withByteArray:(IOSByteArray *)value
                        withInt:(jint)row
                        withInt:(jint)column;

+ (jboolean)nativePutStringWithId:(id)windowPtr
                     withNSString:(NSString *)value
                          withInt:(jint)row
                          withInt:(jint)column;

+ (jboolean)nativePutLongWithId:(id)windowPtr
                       withLong:(jlong)value
                        withInt:(jint)row
                        withInt:(jint)column;

+ (jboolean)nativePutDoubleWithId:(id)windowPtr
                       withDouble:(jdouble)value
                          withInt:(jint)row
                          withInt:(jint)column;

+ (jboolean)nativePutNullWithId:(id)windowPtr
                        withInt:(jint)row
                        withInt:(jint)column;

- (void)dispose;

@end

J2OBJC_FIELD_SETTER(ComYahooAndroidSqliteCursorWindow, mName_, NSString *)
J2OBJC_FIELD_SETTER(ComYahooAndroidSqliteCursorWindow, mCloseGuard_, ComYahooAndroidSqliteCloseGuard *)

inline NSString *ComYahooAndroidSqliteCursorWindow_get_STATS_TAG(void);
static NSString *ComYahooAndroidSqliteCursorWindow_STATS_TAG = @"CursorWindowStats";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYahooAndroidSqliteCursorWindow, STATS_TAG, NSString *)

inline jint ComYahooAndroidSqliteCursorWindow_get_sCursorWindowSize(void);
#define ComYahooAndroidSqliteCursorWindow_sCursorWindowSize 2097152
J2OBJC_STATIC_FIELD_CONSTANT(ComYahooAndroidSqliteCursorWindow, sCursorWindowSize, jint)

__attribute__((unused)) static id ComYahooAndroidSqliteCursorWindow_nativeCreateWithNSString_withInt_(NSString *name, jint cursorWindowSize);

__attribute__((unused)) static void ComYahooAndroidSqliteCursorWindow_nativeDisposeWithId_(id windowPtr);

__attribute__((unused)) static void ComYahooAndroidSqliteCursorWindow_nativeClearWithId_(id windowPtr);

__attribute__((unused)) static jint ComYahooAndroidSqliteCursorWindow_nativeGetNumRowsWithId_(id windowPtr);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativeSetNumColumnsWithId_withInt_(id windowPtr, jint columnNum);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativeAllocRowWithId_(id windowPtr);

__attribute__((unused)) static void ComYahooAndroidSqliteCursorWindow_nativeFreeLastRowWithId_(id windowPtr);

__attribute__((unused)) static jint ComYahooAndroidSqliteCursorWindow_nativeGetTypeWithId_withInt_withInt_(id windowPtr, jint row, jint column);

__attribute__((unused)) static IOSByteArray *ComYahooAndroidSqliteCursorWindow_nativeGetBlobWithId_withInt_withInt_(id windowPtr, jint row, jint column);

__attribute__((unused)) static NSString *ComYahooAndroidSqliteCursorWindow_nativeGetStringWithId_withInt_withInt_(id windowPtr, jint row, jint column);

__attribute__((unused)) static jlong ComYahooAndroidSqliteCursorWindow_nativeGetLongWithId_withInt_withInt_(id windowPtr, jint row, jint column);

__attribute__((unused)) static jdouble ComYahooAndroidSqliteCursorWindow_nativeGetDoubleWithId_withInt_withInt_(id windowPtr, jint row, jint column);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(id windowPtr, IOSByteArray *value, jint row, jint column);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(id windowPtr, NSString *value, jint row, jint column);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(id windowPtr, jlong value, jint row, jint column);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(id windowPtr, jdouble value, jint row, jint column);

__attribute__((unused)) static jboolean ComYahooAndroidSqliteCursorWindow_nativePutNullWithId_withInt_withInt_(id windowPtr, jint row, jint column);

__attribute__((unused)) static void ComYahooAndroidSqliteCursorWindow_dispose(ComYahooAndroidSqliteCursorWindow *self);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$5(void);

@implementation ComYahooAndroidSqliteCursorWindow

+ (id)nativeCreateWithNSString:(NSString *)name
                       withInt:(jint)cursorWindowSize {
  return ComYahooAndroidSqliteCursorWindow_nativeCreateWithNSString_withInt_(name, cursorWindowSize);
}

+ (void)nativeDisposeWithId:(id)windowPtr {
  ComYahooAndroidSqliteCursorWindow_nativeDisposeWithId_(windowPtr);
}

+ (void)nativeClearWithId:(id)windowPtr {
  ComYahooAndroidSqliteCursorWindow_nativeClearWithId_(windowPtr);
}

+ (jint)nativeGetNumRowsWithId:(id)windowPtr {
  return ComYahooAndroidSqliteCursorWindow_nativeGetNumRowsWithId_(windowPtr);
}

+ (jboolean)nativeSetNumColumnsWithId:(id)windowPtr
                              withInt:(jint)columnNum {
  return ComYahooAndroidSqliteCursorWindow_nativeSetNumColumnsWithId_withInt_(windowPtr, columnNum);
}

+ (jboolean)nativeAllocRowWithId:(id)windowPtr {
  return ComYahooAndroidSqliteCursorWindow_nativeAllocRowWithId_(windowPtr);
}

+ (void)nativeFreeLastRowWithId:(id)windowPtr {
  ComYahooAndroidSqliteCursorWindow_nativeFreeLastRowWithId_(windowPtr);
}

+ (jint)nativeGetTypeWithId:(id)windowPtr
                    withInt:(jint)row
                    withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativeGetTypeWithId_withInt_withInt_(windowPtr, row, column);
}

+ (IOSByteArray *)nativeGetBlobWithId:(id)windowPtr
                              withInt:(jint)row
                              withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativeGetBlobWithId_withInt_withInt_(windowPtr, row, column);
}

+ (NSString *)nativeGetStringWithId:(id)windowPtr
                            withInt:(jint)row
                            withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativeGetStringWithId_withInt_withInt_(windowPtr, row, column);
}

+ (jlong)nativeGetLongWithId:(id)windowPtr
                     withInt:(jint)row
                     withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativeGetLongWithId_withInt_withInt_(windowPtr, row, column);
}

+ (jdouble)nativeGetDoubleWithId:(id)windowPtr
                         withInt:(jint)row
                         withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativeGetDoubleWithId_withInt_withInt_(windowPtr, row, column);
}

+ (jboolean)nativePutBlobWithId:(id)windowPtr
                  withByteArray:(IOSByteArray *)value
                        withInt:(jint)row
                        withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(windowPtr, value, row, column);
}

+ (jboolean)nativePutStringWithId:(id)windowPtr
                     withNSString:(NSString *)value
                          withInt:(jint)row
                          withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(windowPtr, value, row, column);
}

+ (jboolean)nativePutLongWithId:(id)windowPtr
                       withLong:(jlong)value
                        withInt:(jint)row
                        withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(windowPtr, value, row, column);
}

+ (jboolean)nativePutDoubleWithId:(id)windowPtr
                       withDouble:(jdouble)value
                          withInt:(jint)row
                          withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(windowPtr, value, row, column);
}

+ (jboolean)nativePutNullWithId:(id)windowPtr
                        withInt:(jint)row
                        withInt:(jint)column {
  return ComYahooAndroidSqliteCursorWindow_nativePutNullWithId_withInt_withInt_(windowPtr, row, column);
}

- (instancetype)initWithNSString:(NSString *)name {
  ComYahooAndroidSqliteCursorWindow_initWithNSString_(self, name);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)localWindow {
  ComYahooAndroidSqliteCursorWindow_initWithBoolean_(self, localWindow);
  return self;
}

- (void)java_finalize {
  @try {
    if (mCloseGuard_ != nil) {
      [mCloseGuard_ warnIfOpen];
    }
    ComYahooAndroidSqliteCursorWindow_dispose(self);
  }
  @finally {
    [super java_finalize];
  }
}

- (void)dispose {
  ComYahooAndroidSqliteCursorWindow_dispose(self);
}

- (NSString *)getName {
  return mName_;
}

- (void)clear {
  [self acquireReference];
  @try {
    mStartPos_ = 0;
    ComYahooAndroidSqliteCursorWindow_nativeClearWithId_(mWindowPtr_);
  }
  @finally {
    [self releaseReference];
  }
}

- (jint)getStartPosition {
  return mStartPos_;
}

- (void)setStartPositionWithInt:(jint)pos {
  mStartPos_ = pos;
}

- (jint)getNumRows {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeGetNumRowsWithId_(mWindowPtr_);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)setNumColumnsWithInt:(jint)columnNum {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeSetNumColumnsWithId_withInt_(mWindowPtr_, columnNum);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)allocRow {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeAllocRowWithId_(mWindowPtr_);
  }
  @finally {
    [self releaseReference];
  }
}

- (void)freeLastRow {
  [self acquireReference];
  @try {
    ComYahooAndroidSqliteCursorWindow_nativeFreeLastRowWithId_(mWindowPtr_);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)isNullWithInt:(jint)row
                  withInt:(jint)column {
  return [self getTypeWithInt:row withInt:column] == ComYahooSquidbDataICursor_FIELD_TYPE_NULL;
}

- (jboolean)isBlobWithInt:(jint)row
                  withInt:(jint)column {
  jint type = [self getTypeWithInt:row withInt:column];
  return type == ComYahooSquidbDataICursor_FIELD_TYPE_BLOB || type == ComYahooSquidbDataICursor_FIELD_TYPE_NULL;
}

- (jboolean)isLongWithInt:(jint)row
                  withInt:(jint)column {
  return [self getTypeWithInt:row withInt:column] == ComYahooSquidbDataICursor_FIELD_TYPE_INTEGER;
}

- (jboolean)isFloatWithInt:(jint)row
                   withInt:(jint)column {
  return [self getTypeWithInt:row withInt:column] == ComYahooSquidbDataICursor_FIELD_TYPE_FLOAT;
}

- (jboolean)isStringWithInt:(jint)row
                    withInt:(jint)column {
  jint type = [self getTypeWithInt:row withInt:column];
  return type == ComYahooSquidbDataICursor_FIELD_TYPE_STRING || type == ComYahooSquidbDataICursor_FIELD_TYPE_NULL;
}

- (jint)getTypeWithInt:(jint)row
               withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeGetTypeWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (IOSByteArray *)getBlobWithInt:(jint)row
                         withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeGetBlobWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (NSString *)getStringWithInt:(jint)row
                       withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeGetStringWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jlong)getLongWithInt:(jint)row
                withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeGetLongWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jdouble)getDoubleWithInt:(jint)row
                    withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativeGetDoubleWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jshort)getShortWithInt:(jint)row
                  withInt:(jint)column {
  return (jshort) [self getLongWithInt:row withInt:column];
}

- (jint)getIntWithInt:(jint)row
              withInt:(jint)column {
  return (jint) [self getLongWithInt:row withInt:column];
}

- (jfloat)getFloatWithInt:(jint)row
                  withInt:(jint)column {
  return (jfloat) [self getDoubleWithInt:row withInt:column];
}

- (jboolean)putBlobWithByteArray:(IOSByteArray *)value
                         withInt:(jint)row
                         withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)putStringWithNSString:(NSString *)value
                          withInt:(jint)row
                          withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)putLongWithLong:(jlong)value
                    withInt:(jint)row
                    withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)putDoubleWithDouble:(jdouble)value
                        withInt:(jint)row
                        withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(mWindowPtr_, value, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (jboolean)putNullWithInt:(jint)row
                   withInt:(jint)column {
  [self acquireReference];
  @try {
    return ComYahooAndroidSqliteCursorWindow_nativePutNullWithId_withInt_withInt_(mWindowPtr_, row - mStartPos_, column);
  }
  @finally {
    [self releaseReference];
  }
}

- (void)onAllReferencesReleased {
  ComYahooAndroidSqliteCursorWindow_dispose(self);
}

- (NSString *)description {
  return JreStrcat("$$$C", [self getName], @" {", JavaLangInteger_toHexStringWithInt_(JavaLangSystem_identityHashCodeWithId_(mWindowPtr_)), '}');
}

- (void)dealloc {
  JreCheckFinalize(self, [ComYahooAndroidSqliteCursorWindow class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x10a, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x10a, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x10a, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x10a, 5, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 8, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x10a, 9, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x10a, 10, 11, -1, -1, -1, -1 },
    { NULL, "[B", 0x10a, 12, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x10a, 13, 11, -1, -1, -1, -1 },
    { NULL, "J", 0x10a, 14, 11, -1, -1, -1, -1 },
    { NULL, "D", 0x10a, 15, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 16, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 18, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 20, 21, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 22, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x10a, 24, 11, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 25, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 26, -1, -1, 27, -1 },
    { NULL, "V", 0x4, 28, -1, 29, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 32, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 33, 34, -1, -1, 35, -1 },
    { NULL, "Z", 0x1, 36, 34, -1, -1, 37, -1 },
    { NULL, "Z", 0x1, 38, 34, -1, -1, 39, -1 },
    { NULL, "Z", 0x1, 40, 34, -1, -1, 41, -1 },
    { NULL, "Z", 0x1, 42, 34, -1, -1, 43, -1 },
    { NULL, "I", 0x1, 44, 34, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 45, 34, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 46, 34, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 47, 34, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 48, 34, -1, -1, -1, -1 },
    { NULL, "S", 0x1, 49, 34, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 50, 34, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 51, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 52, 53, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 54, 55, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 56, 57, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 58, 59, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 60, 34, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 61, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(nativeCreateWithNSString:withInt:);
  methods[1].selector = @selector(nativeDisposeWithId:);
  methods[2].selector = @selector(nativeClearWithId:);
  methods[3].selector = @selector(nativeGetNumRowsWithId:);
  methods[4].selector = @selector(nativeSetNumColumnsWithId:withInt:);
  methods[5].selector = @selector(nativeAllocRowWithId:);
  methods[6].selector = @selector(nativeFreeLastRowWithId:);
  methods[7].selector = @selector(nativeGetTypeWithId:withInt:withInt:);
  methods[8].selector = @selector(nativeGetBlobWithId:withInt:withInt:);
  methods[9].selector = @selector(nativeGetStringWithId:withInt:withInt:);
  methods[10].selector = @selector(nativeGetLongWithId:withInt:withInt:);
  methods[11].selector = @selector(nativeGetDoubleWithId:withInt:withInt:);
  methods[12].selector = @selector(nativePutBlobWithId:withByteArray:withInt:withInt:);
  methods[13].selector = @selector(nativePutStringWithId:withNSString:withInt:withInt:);
  methods[14].selector = @selector(nativePutLongWithId:withLong:withInt:withInt:);
  methods[15].selector = @selector(nativePutDoubleWithId:withDouble:withInt:withInt:);
  methods[16].selector = @selector(nativePutNullWithId:withInt:withInt:);
  methods[17].selector = @selector(initWithNSString:);
  methods[18].selector = @selector(initWithBoolean:);
  methods[19].selector = @selector(java_finalize);
  methods[20].selector = @selector(dispose);
  methods[21].selector = @selector(getName);
  methods[22].selector = @selector(clear);
  methods[23].selector = @selector(getStartPosition);
  methods[24].selector = @selector(setStartPositionWithInt:);
  methods[25].selector = @selector(getNumRows);
  methods[26].selector = @selector(setNumColumnsWithInt:);
  methods[27].selector = @selector(allocRow);
  methods[28].selector = @selector(freeLastRow);
  methods[29].selector = @selector(isNullWithInt:withInt:);
  methods[30].selector = @selector(isBlobWithInt:withInt:);
  methods[31].selector = @selector(isLongWithInt:withInt:);
  methods[32].selector = @selector(isFloatWithInt:withInt:);
  methods[33].selector = @selector(isStringWithInt:withInt:);
  methods[34].selector = @selector(getTypeWithInt:withInt:);
  methods[35].selector = @selector(getBlobWithInt:withInt:);
  methods[36].selector = @selector(getStringWithInt:withInt:);
  methods[37].selector = @selector(getLongWithInt:withInt:);
  methods[38].selector = @selector(getDoubleWithInt:withInt:);
  methods[39].selector = @selector(getShortWithInt:withInt:);
  methods[40].selector = @selector(getIntWithInt:withInt:);
  methods[41].selector = @selector(getFloatWithInt:withInt:);
  methods[42].selector = @selector(putBlobWithByteArray:withInt:withInt:);
  methods[43].selector = @selector(putStringWithNSString:withInt:withInt:);
  methods[44].selector = @selector(putLongWithLong:withInt:withInt:);
  methods[45].selector = @selector(putDoubleWithDouble:withInt:withInt:);
  methods[46].selector = @selector(putNullWithInt:withInt:);
  methods[47].selector = @selector(onAllReferencesReleased);
  methods[48].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STATS_TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 62, -1, -1 },
    { "sCursorWindowSize", "I", .constantValue.asInt = ComYahooAndroidSqliteCursorWindow_sCursorWindowSize, 0x1a, -1, -1, -1, -1 },
    { "mWindowPtr_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "mStartPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mCloseGuard_", "LComYahooAndroidSqliteCloseGuard;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "nativeCreate", "LNSString;I", "nativeDispose", "LNSObject;", "nativeClear", "nativeGetNumRows", "nativeSetNumColumns", "LNSObject;I", "nativeAllocRow", "nativeFreeLastRow", "nativeGetType", "LNSObject;II", "nativeGetBlob", "nativeGetString", "nativeGetLong", "nativeGetDouble", "nativePutBlob", "LNSObject;[BII", "nativePutString", "LNSObject;LNSString;II", "nativePutLong", "LNSObject;JII", "nativePutDouble", "LNSObject;DII", "nativePutNull", "LNSString;", "Z", (void *)&ComYahooAndroidSqliteCursorWindow__Annotations$0, "finalize", "LJavaLangThrowable;", "setStartPosition", "I", "setNumColumns", "isNull", "II", (void *)&ComYahooAndroidSqliteCursorWindow__Annotations$1, "isBlob", (void *)&ComYahooAndroidSqliteCursorWindow__Annotations$2, "isLong", (void *)&ComYahooAndroidSqliteCursorWindow__Annotations$3, "isFloat", (void *)&ComYahooAndroidSqliteCursorWindow__Annotations$4, "isString", (void *)&ComYahooAndroidSqliteCursorWindow__Annotations$5, "getType", "getBlob", "getString", "getLong", "getDouble", "getShort", "getInt", "getFloat", "putBlob", "[BII", "putString", "LNSString;II", "putLong", "JII", "putDouble", "DII", "putNull", "toString", &ComYahooAndroidSqliteCursorWindow_STATS_TAG };
  static const J2ObjcClassInfo _ComYahooAndroidSqliteCursorWindow = { "CursorWindow", "com.yahoo.android.sqlite", ptrTable, methods, fields, 7, 0x1, 49, 6, -1, -1, -1, -1, -1 };
  return &_ComYahooAndroidSqliteCursorWindow;
}

@end

id ComYahooAndroidSqliteCursorWindow_nativeCreateWithNSString_withInt_(NSString *name, jint cursorWindowSize) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeCreate:name cursorWindowSize:cursorWindowSize];
}

void ComYahooAndroidSqliteCursorWindow_nativeDisposeWithId_(id windowPtr) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  [CursorWindowNative nativeDispose:windowPtr];
}

void ComYahooAndroidSqliteCursorWindow_nativeClearWithId_(id windowPtr) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  [CursorWindowNative nativeClear:windowPtr];
}

jint ComYahooAndroidSqliteCursorWindow_nativeGetNumRowsWithId_(id windowPtr) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeGetNumRows:windowPtr];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativeSetNumColumnsWithId_withInt_(id windowPtr, jint columnNum) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeSetNumColumns:windowPtr columnNum:columnNum];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativeAllocRowWithId_(id windowPtr) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeAllocRow:windowPtr];
}

void ComYahooAndroidSqliteCursorWindow_nativeFreeLastRowWithId_(id windowPtr) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  [CursorWindowNative nativeFreeLastRow:windowPtr];
}

jint ComYahooAndroidSqliteCursorWindow_nativeGetTypeWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeGetType:windowPtr row:row column:column];
}

IOSByteArray *ComYahooAndroidSqliteCursorWindow_nativeGetBlobWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeGetBlob:windowPtr row:row column:column];
}

NSString *ComYahooAndroidSqliteCursorWindow_nativeGetStringWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeGetString:windowPtr row:row column:column];
}

jlong ComYahooAndroidSqliteCursorWindow_nativeGetLongWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeGetLong:windowPtr row:row column:column];
}

jdouble ComYahooAndroidSqliteCursorWindow_nativeGetDoubleWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativeGetDouble:windowPtr row:row column:column];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativePutBlobWithId_withByteArray_withInt_withInt_(id windowPtr, IOSByteArray *value, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativePutBlob:windowPtr value:value row:row column:column];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativePutStringWithId_withNSString_withInt_withInt_(id windowPtr, NSString *value, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativePutString:windowPtr value:value row:row column:column];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativePutLongWithId_withLong_withInt_withInt_(id windowPtr, jlong value, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativePutLong:windowPtr value:value row:row column:column];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativePutDoubleWithId_withDouble_withInt_withInt_(id windowPtr, jdouble value, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativePutDouble:windowPtr value:value row:row column:column];
}

jboolean ComYahooAndroidSqliteCursorWindow_nativePutNullWithId_withInt_withInt_(id windowPtr, jint row, jint column) {
  ComYahooAndroidSqliteCursorWindow_initialize();
  return [CursorWindowNative nativePutNull:windowPtr row:row column:column];
}

void ComYahooAndroidSqliteCursorWindow_initWithNSString_(ComYahooAndroidSqliteCursorWindow *self, NSString *name) {
  ComYahooAndroidSqliteSQLiteClosable_init(self);
  self->mCloseGuard_ = ComYahooAndroidSqliteCloseGuard_get();
  self->mStartPos_ = 0;
  self->mName_ = name != nil && [name java_length] != 0 ? name : @"<unnamed>";
  self->mWindowPtr_ = ComYahooAndroidSqliteCursorWindow_nativeCreateWithNSString_withInt_(self->mName_, ComYahooAndroidSqliteCursorWindow_sCursorWindowSize);
  if (self->mWindowPtr_ == nil) {
    @throw new_ComYahooAndroidSqliteCursorWindowAllocationException_initWithNSString_(JreStrcat("$I$", @"Cursor window allocation of ", (ComYahooAndroidSqliteCursorWindow_sCursorWindowSize / 1024), @" kb failed. "));
  }
  [((ComYahooAndroidSqliteCloseGuard *) nil_chk(self->mCloseGuard_)) openWithNSString:@"close"];
}

ComYahooAndroidSqliteCursorWindow *new_ComYahooAndroidSqliteCursorWindow_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(ComYahooAndroidSqliteCursorWindow, initWithNSString_, name)
}

ComYahooAndroidSqliteCursorWindow *create_ComYahooAndroidSqliteCursorWindow_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(ComYahooAndroidSqliteCursorWindow, initWithNSString_, name)
}

void ComYahooAndroidSqliteCursorWindow_initWithBoolean_(ComYahooAndroidSqliteCursorWindow *self, jboolean localWindow) {
  ComYahooAndroidSqliteCursorWindow_initWithNSString_(self, nil);
}

ComYahooAndroidSqliteCursorWindow *new_ComYahooAndroidSqliteCursorWindow_initWithBoolean_(jboolean localWindow) {
  J2OBJC_NEW_IMPL(ComYahooAndroidSqliteCursorWindow, initWithBoolean_, localWindow)
}

ComYahooAndroidSqliteCursorWindow *create_ComYahooAndroidSqliteCursorWindow_initWithBoolean_(jboolean localWindow) {
  J2OBJC_CREATE_IMPL(ComYahooAndroidSqliteCursorWindow, initWithBoolean_, localWindow)
}

void ComYahooAndroidSqliteCursorWindow_dispose(ComYahooAndroidSqliteCursorWindow *self) {
  if (self->mCloseGuard_ != nil) {
    [self->mCloseGuard_ close];
  }
  if (self->mWindowPtr_ != nil) {
    ComYahooAndroidSqliteCursorWindow_nativeDisposeWithId_(self->mWindowPtr_);
    self->mWindowPtr_ = nil;
  }
}

IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteCursorWindow__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooAndroidSqliteCursorWindow)
