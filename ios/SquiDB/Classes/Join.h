//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Join.java
//

#ifndef Join_H
#define Join_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CompilableWithArguments.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class SquiDBSqlBuilder;
@class SquiDBSqlTable;

@interface SquiDBJoin : SquiDBCompilableWithArguments {
 @public
  SquiDBSqlTable *joinTable_;
}

#pragma mark Public

+ (SquiDBJoin *)crossWithSquiDBSqlTable:(SquiDBSqlTable *)table
               withSquiDBCriterionArray:(IOSObjectArray *)criterions;

+ (SquiDBJoin *)crossWithSquiDBSqlTable:(SquiDBSqlTable *)table
                withSquiDBPropertyArray:(IOSObjectArray *)usingColumns;

+ (SquiDBJoin *)innerWithSquiDBSqlTable:(SquiDBSqlTable *)table
               withSquiDBCriterionArray:(IOSObjectArray *)criterions;

+ (SquiDBJoin *)innerWithSquiDBSqlTable:(SquiDBSqlTable *)table
                withSquiDBPropertyArray:(IOSObjectArray *)usingColumns;

+ (SquiDBJoin *)leftWithSquiDBSqlTable:(SquiDBSqlTable *)table
              withSquiDBCriterionArray:(IOSObjectArray *)criterions;

+ (SquiDBJoin *)leftWithSquiDBSqlTable:(SquiDBSqlTable *)table
               withSquiDBPropertyArray:(IOSObjectArray *)usingColumns;

#pragma mark Package-Private

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBJoin)

J2OBJC_FIELD_SETTER(SquiDBJoin, joinTable_, SquiDBSqlTable *)

FOUNDATION_EXPORT SquiDBJoin *SquiDBJoin_innerWithSquiDBSqlTable_withSquiDBCriterionArray_(SquiDBSqlTable *table, IOSObjectArray *criterions);

FOUNDATION_EXPORT SquiDBJoin *SquiDBJoin_innerWithSquiDBSqlTable_withSquiDBPropertyArray_(SquiDBSqlTable *table, IOSObjectArray *usingColumns);

FOUNDATION_EXPORT SquiDBJoin *SquiDBJoin_leftWithSquiDBSqlTable_withSquiDBCriterionArray_(SquiDBSqlTable *table, IOSObjectArray *criterions);

FOUNDATION_EXPORT SquiDBJoin *SquiDBJoin_leftWithSquiDBSqlTable_withSquiDBPropertyArray_(SquiDBSqlTable *table, IOSObjectArray *usingColumns);

FOUNDATION_EXPORT SquiDBJoin *SquiDBJoin_crossWithSquiDBSqlTable_withSquiDBCriterionArray_(SquiDBSqlTable *table, IOSObjectArray *criterions);

FOUNDATION_EXPORT SquiDBJoin *SquiDBJoin_crossWithSquiDBSqlTable_withSquiDBPropertyArray_(SquiDBSqlTable *table, IOSObjectArray *usingColumns);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBJoin)

@compatibility_alias ComYahooSquidbSqlJoin SquiDBJoin;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Join_H
