//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/AbstractWindowedCursor.java
//

#include "AbstractCursor.h"
#include "AbstractWindowedCursor.h"
#include "CursorWindow.h"
#include "ICursor.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StaleDataException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$3(void);

@implementation ComYahooAndroidSqliteAbstractWindowedCursor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooAndroidSqliteAbstractWindowedCursor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSByteArray *)getBlobWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getBlobWithInt:mPos_ withInt:columnIndex];
}

- (NSString *)getStringWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getStringWithInt:mPos_ withInt:columnIndex];
}

- (jshort)getShortWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getShortWithInt:mPos_ withInt:columnIndex];
}

- (jint)getIntWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getIntWithInt:mPos_ withInt:columnIndex];
}

- (jlong)getLongWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getLongWithInt:mPos_ withInt:columnIndex];
}

- (jfloat)getFloatWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getFloatWithInt:mPos_ withInt:columnIndex];
}

- (jdouble)getDoubleWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getDoubleWithInt:mPos_ withInt:columnIndex];
}

- (jboolean)isNullWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getTypeWithInt:mPos_ withInt:columnIndex] == ComYahooSquidbDataICursor_FIELD_TYPE_NULL;
}

- (jboolean)isBlobWithInt:(jint)columnIndex {
  return [self getTypeWithInt:columnIndex] == ComYahooSquidbDataICursor_FIELD_TYPE_BLOB;
}

- (jboolean)isStringWithInt:(jint)columnIndex {
  return [self getTypeWithInt:columnIndex] == ComYahooSquidbDataICursor_FIELD_TYPE_STRING;
}

- (jboolean)isLongWithInt:(jint)columnIndex {
  return [self getTypeWithInt:columnIndex] == ComYahooSquidbDataICursor_FIELD_TYPE_INTEGER;
}

- (jboolean)isFloatWithInt:(jint)columnIndex {
  return [self getTypeWithInt:columnIndex] == ComYahooSquidbDataICursor_FIELD_TYPE_FLOAT;
}

- (jint)getTypeWithInt:(jint)columnIndex {
  [self checkPosition];
  return [((ComYahooAndroidSqliteCursorWindow *) nil_chk(mWindow_)) getTypeWithInt:mPos_ withInt:columnIndex];
}

- (void)checkPosition {
  [super checkPosition];
  if (mWindow_ == nil) {
    @throw new_ComYahooAndroidSqliteStaleDataException_initWithNSString_(@"Attempting to access a closed CursorWindow.Most probable cause: cursor is deactivated prior to calling this method.");
  }
}

- (ComYahooAndroidSqliteCursorWindow *)getWindow {
  return mWindow_;
}

- (void)setWindowWithComYahooAndroidSqliteCursorWindow:(ComYahooAndroidSqliteCursorWindow *)window {
  if (window != mWindow_) {
    [self closeWindow];
    mWindow_ = window;
  }
}

- (jboolean)hasWindow {
  return mWindow_ != nil;
}

- (void)closeWindow {
  if (mWindow_ != nil) {
    [mWindow_ close];
    mWindow_ = nil;
  }
}

- (void)clearOrCreateWindowWithNSString:(NSString *)name {
  if (mWindow_ == nil) {
    mWindow_ = new_ComYahooAndroidSqliteCursorWindow_initWithNSString_(name);
  }
  else {
    [mWindow_ clear];
  }
}

- (void)onDeactivateOrClose {
  [super onDeactivateOrClose];
  [self closeWindow];
}

- (void)dealloc {
  JreCheckFinalize(self, [ComYahooAndroidSqliteAbstractWindowedCursor class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "S", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 1, -1, -1, 10, -1 },
    { NULL, "Z", 0x1, 11, 1, -1, -1, 12, -1 },
    { NULL, "Z", 0x1, 13, 1, -1, -1, 14, -1 },
    { NULL, "Z", 0x1, 15, 1, -1, -1, 16, -1 },
    { NULL, "I", 0x1, 17, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYahooAndroidSqliteCursorWindow;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getBlobWithInt:);
  methods[2].selector = @selector(getStringWithInt:);
  methods[3].selector = @selector(getShortWithInt:);
  methods[4].selector = @selector(getIntWithInt:);
  methods[5].selector = @selector(getLongWithInt:);
  methods[6].selector = @selector(getFloatWithInt:);
  methods[7].selector = @selector(getDoubleWithInt:);
  methods[8].selector = @selector(isNullWithInt:);
  methods[9].selector = @selector(isBlobWithInt:);
  methods[10].selector = @selector(isStringWithInt:);
  methods[11].selector = @selector(isLongWithInt:);
  methods[12].selector = @selector(isFloatWithInt:);
  methods[13].selector = @selector(getTypeWithInt:);
  methods[14].selector = @selector(checkPosition);
  methods[15].selector = @selector(getWindow);
  methods[16].selector = @selector(setWindowWithComYahooAndroidSqliteCursorWindow:);
  methods[17].selector = @selector(hasWindow);
  methods[18].selector = @selector(closeWindow);
  methods[19].selector = @selector(clearOrCreateWindowWithNSString:);
  methods[20].selector = @selector(onDeactivateOrClose);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mWindow_", "LComYahooAndroidSqliteCursorWindow;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getBlob", "I", "getString", "getShort", "getInt", "getLong", "getFloat", "getDouble", "isNull", "isBlob", (void *)&ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$0, "isString", (void *)&ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$1, "isLong", (void *)&ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$2, "isFloat", (void *)&ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$3, "getType", "setWindow", "LComYahooAndroidSqliteCursorWindow;", "clearOrCreateWindow", "LNSString;" };
  static const J2ObjcClassInfo _ComYahooAndroidSqliteAbstractWindowedCursor = { "AbstractWindowedCursor", "com.yahoo.android.sqlite", ptrTable, methods, fields, 7, 0x401, 21, 1, -1, -1, -1, -1, -1 };
  return &_ComYahooAndroidSqliteAbstractWindowedCursor;
}

@end

void ComYahooAndroidSqliteAbstractWindowedCursor_init(ComYahooAndroidSqliteAbstractWindowedCursor *self) {
  ComYahooAndroidSqliteAbstractCursor_init(self);
}

IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComYahooAndroidSqliteAbstractWindowedCursor__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooAndroidSqliteAbstractWindowedCursor)
