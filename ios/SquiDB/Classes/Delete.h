//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Delete.java
//

#ifndef Delete_H
#define Delete_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TableStatement.h"

@class SquiDBCriterion;
@class SquiDBSqlBuilder;
@class SquiDBSqlTable;
@class SquiDBTable;
@class SquiDBView;

@interface SquiDBDelete : SquiDBTableStatement

#pragma mark Public

+ (SquiDBDelete *)fromWithSquiDBTable:(SquiDBTable *)table;

+ (SquiDBDelete *)fromWithSquiDBView:(SquiDBView *)view;

- (SquiDBSqlTable *)getTable;

- (SquiDBDelete *)whereWithSquiDBCriterion:(SquiDBCriterion *)criterion;

#pragma mark Protected

- (instancetype __nonnull)initWithSquiDBSqlTable:(SquiDBSqlTable *)table;

#pragma mark Package-Private

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBDelete)

FOUNDATION_EXPORT void SquiDBDelete_initWithSquiDBSqlTable_(SquiDBDelete *self, SquiDBSqlTable *table);

FOUNDATION_EXPORT SquiDBDelete *new_SquiDBDelete_initWithSquiDBSqlTable_(SquiDBSqlTable *table) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBDelete *create_SquiDBDelete_initWithSquiDBSqlTable_(SquiDBSqlTable *table);

FOUNDATION_EXPORT SquiDBDelete *SquiDBDelete_fromWithSquiDBTable_(SquiDBTable *table);

FOUNDATION_EXPORT SquiDBDelete *SquiDBDelete_fromWithSquiDBView_(SquiDBView *view);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBDelete)

@compatibility_alias ComYahooSquidbSqlDelete SquiDBDelete;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Delete_H
