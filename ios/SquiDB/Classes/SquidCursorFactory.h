//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SquidCursorFactory.java
//

#ifndef SquidCursorFactory_H
#define SquidCursorFactory_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "SQLiteDatabase.h"

@class IOSObjectArray;
@class SquiDBSQLiteProgram;
@class SquiDBSQLiteQuery;
@protocol SquiDBICursor;
@protocol SquiDBSQLiteCursorDriver;

@interface SquiDBSquidCursorFactory : NSObject < SquiDBSQLiteDatabase_CursorFactory >

#pragma mark Public

- (instancetype __nonnull)initWithNSObjectArray:(IOSObjectArray *)sqlArgs;

+ (void)bindArgumentsToProgramWithSquiDBSQLiteProgram:(SquiDBSQLiteProgram *)program
                                    withNSObjectArray:(IOSObjectArray *)sqlArgs;

- (id<SquiDBICursor>)newCursorWithSquiDBSQLiteDatabase:(SquiDBSQLiteDatabase *)db
                          withSquiDBSQLiteCursorDriver:(id<SquiDBSQLiteCursorDriver>)masterQuery
                                          withNSString:(NSString *)editTable
                                 withSquiDBSQLiteQuery:(SquiDBSQLiteQuery *)query OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBSquidCursorFactory)

FOUNDATION_EXPORT void SquiDBSquidCursorFactory_initWithNSObjectArray_(SquiDBSquidCursorFactory *self, IOSObjectArray *sqlArgs);

FOUNDATION_EXPORT SquiDBSquidCursorFactory *new_SquiDBSquidCursorFactory_initWithNSObjectArray_(IOSObjectArray *sqlArgs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSquidCursorFactory *create_SquiDBSquidCursorFactory_initWithNSObjectArray_(IOSObjectArray *sqlArgs);

FOUNDATION_EXPORT void SquiDBSquidCursorFactory_bindArgumentsToProgramWithSquiDBSQLiteProgram_withNSObjectArray_(SquiDBSQLiteProgram *program, IOSObjectArray *sqlArgs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSquidCursorFactory)

@compatibility_alias ComYahooSquidbIosSquidCursorFactory SquiDBSquidCursorFactory;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SquidCursorFactory_H
