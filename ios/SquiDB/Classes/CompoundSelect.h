//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CompoundSelect.java
//

#ifndef CompoundSelect_H
#define CompoundSelect_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "CompilableWithArguments.h"
#include "J2ObjC_header.h"

@class SquiDBQuery;
@class SquiDBSqlBuilder;

@interface SquiDBCompoundSelect : SquiDBCompilableWithArguments {
 @public
  SquiDBQuery *query_;
}

#pragma mark Public

+ (SquiDBCompoundSelect *)exceptWithSquiDBQuery:(SquiDBQuery *)query;

+ (SquiDBCompoundSelect *)intersectWithSquiDBQuery:(SquiDBQuery *)query;

+ (SquiDBCompoundSelect *)union__WithSquiDBQuery:(SquiDBQuery *)query;

+ (SquiDBCompoundSelect *)unionAllWithSquiDBQuery:(SquiDBQuery *)query;

#pragma mark Package-Private

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBCompoundSelect)

J2OBJC_FIELD_SETTER(SquiDBCompoundSelect, query_, SquiDBQuery *)

FOUNDATION_EXPORT SquiDBCompoundSelect *SquiDBCompoundSelect_union__WithSquiDBQuery_(SquiDBQuery *query);

FOUNDATION_EXPORT SquiDBCompoundSelect *SquiDBCompoundSelect_unionAllWithSquiDBQuery_(SquiDBQuery *query);

FOUNDATION_EXPORT SquiDBCompoundSelect *SquiDBCompoundSelect_intersectWithSquiDBQuery_(SquiDBQuery *query);

FOUNDATION_EXPORT SquiDBCompoundSelect *SquiDBCompoundSelect_exceptWithSquiDBQuery_(SquiDBQuery *query);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBCompoundSelect)

@compatibility_alias ComYahooSquidbSqlCompoundSelect SquiDBCompoundSelect;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CompoundSelect_H
