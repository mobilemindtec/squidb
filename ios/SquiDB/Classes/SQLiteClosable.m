//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SQLiteClosable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "SQLiteClosable.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/annotation/Annotation.h"

@interface SquiDBSQLiteClosable () {
 @public
  jint mReferenceCount_;
}

@end

__attribute__((unused)) static IOSObjectArray *SquiDBSQLiteClosable__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *SquiDBSQLiteClosable__Annotations$1(void);

@implementation SquiDBSQLiteClosable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SquiDBSQLiteClosable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onAllReferencesReleased {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)onAllReferencesReleasedFromContainer {
  [self onAllReferencesReleased];
}

- (void)acquireReference {
  @synchronized(self) {
    if (mReferenceCount_ <= 0) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"attempt to re-open an already-closed object: ", self));
    }
    mReferenceCount_++;
  }
}

- (void)releaseReference {
  jboolean refCountIsZero = false;
  @synchronized(self) {
    refCountIsZero = (--mReferenceCount_ == 0);
  }
  if (refCountIsZero) {
    [self onAllReferencesReleased];
  }
}

- (void)releaseReferenceFromContainer {
  jboolean refCountIsZero = false;
  @synchronized(self) {
    refCountIsZero = (--mReferenceCount_ == 0);
  }
  if (refCountIsZero) {
    [self onAllReferencesReleasedFromContainer];
  }
}

- (void)close {
  [self releaseReference];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onAllReferencesReleased);
  methods[2].selector = @selector(onAllReferencesReleasedFromContainer);
  methods[3].selector = @selector(acquireReference);
  methods[4].selector = @selector(releaseReference);
  methods[5].selector = @selector(releaseReferenceFromContainer);
  methods[6].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mReferenceCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&SquiDBSQLiteClosable__Annotations$0, (void *)&SquiDBSQLiteClosable__Annotations$1 };
  static const J2ObjcClassInfo _SquiDBSQLiteClosable = { "SQLiteClosable", "com.yahoo.android.sqlite", ptrTable, methods, fields, 7, 0x401, 7, 1, -1, -1, -1, -1, -1 };
  return &_SquiDBSQLiteClosable;
}

@end

void SquiDBSQLiteClosable_init(SquiDBSQLiteClosable *self) {
  NSObject_init(self);
  self->mReferenceCount_ = 1;
}

IOSObjectArray *SquiDBSQLiteClosable__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *SquiDBSQLiteClosable__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBSQLiteClosable)

J2OBJC_NAME_MAPPING(SquiDBSQLiteClosable, "com.yahoo.android.sqlite", "SquiDB")
