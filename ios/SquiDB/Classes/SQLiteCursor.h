//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SQLiteCursor.java
//

#ifndef SQLiteCursor_H
#define SQLiteCursor_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AbstractWindowedCursor.h"
#include "J2ObjC_header.h"

@class IOSObjectArray;
@class SquiDBCursorWindow;
@class SquiDBSQLiteDatabase;
@class SquiDBSQLiteQuery;
@protocol SquiDBSQLiteCursorDriver;

@interface SquiDBSQLiteCursor : SquiDBAbstractWindowedCursor
@property (readonly, copy, class) NSString *TAG NS_SWIFT_NAME(TAG);
@property (readonly, class) jint NO_COUNT NS_SWIFT_NAME(NO_COUNT);

+ (NSString *)TAG;

+ (jint)NO_COUNT;

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBSQLiteCursorDriver:(id<SquiDBSQLiteCursorDriver>)driver
                                              withNSString:(NSString *)editTable
                                     withSquiDBSQLiteQuery:(SquiDBSQLiteQuery *)query;

- (instancetype __nonnull)initWithSquiDBSQLiteDatabase:(SquiDBSQLiteDatabase *)db
                          withSquiDBSQLiteCursorDriver:(id<SquiDBSQLiteCursorDriver>)driver
                                          withNSString:(NSString *)editTable
                                 withSquiDBSQLiteQuery:(SquiDBSQLiteQuery *)query;

- (void)close;

- (void)deactivate;

- (jint)getColumnIndexWithNSString:(NSString *)columnName;

- (IOSObjectArray *)getColumnNames;

- (jint)getCount;

- (SquiDBSQLiteDatabase *)getDatabase;

- (jboolean)onMoveWithInt:(jint)oldPosition
                  withInt:(jint)newPosition;

- (jboolean)requery;

- (void)setSelectionArgumentsWithNSStringArray:(IOSObjectArray *)selectionArgs;

- (void)setWindowWithSquiDBCursorWindow:(SquiDBCursorWindow *)window;

#pragma mark Protected

- (void)java_finalize;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBSQLiteCursor)

inline NSString *SquiDBSQLiteCursor_get_TAG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *SquiDBSQLiteCursor_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBSQLiteCursor, TAG, NSString *)

inline jint SquiDBSQLiteCursor_get_NO_COUNT(void);
#define SquiDBSQLiteCursor_NO_COUNT -1
J2OBJC_STATIC_FIELD_CONSTANT(SquiDBSQLiteCursor, NO_COUNT, jint)

FOUNDATION_EXPORT void SquiDBSQLiteCursor_initWithSquiDBSQLiteDatabase_withSquiDBSQLiteCursorDriver_withNSString_withSquiDBSQLiteQuery_(SquiDBSQLiteCursor *self, SquiDBSQLiteDatabase *db, id<SquiDBSQLiteCursorDriver> driver, NSString *editTable, SquiDBSQLiteQuery *query);

FOUNDATION_EXPORT SquiDBSQLiteCursor *new_SquiDBSQLiteCursor_initWithSquiDBSQLiteDatabase_withSquiDBSQLiteCursorDriver_withNSString_withSquiDBSQLiteQuery_(SquiDBSQLiteDatabase *db, id<SquiDBSQLiteCursorDriver> driver, NSString *editTable, SquiDBSQLiteQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSQLiteCursor *create_SquiDBSQLiteCursor_initWithSquiDBSQLiteDatabase_withSquiDBSQLiteCursorDriver_withNSString_withSquiDBSQLiteQuery_(SquiDBSQLiteDatabase *db, id<SquiDBSQLiteCursorDriver> driver, NSString *editTable, SquiDBSQLiteQuery *query);

FOUNDATION_EXPORT void SquiDBSQLiteCursor_initWithSquiDBSQLiteCursorDriver_withNSString_withSquiDBSQLiteQuery_(SquiDBSQLiteCursor *self, id<SquiDBSQLiteCursorDriver> driver, NSString *editTable, SquiDBSQLiteQuery *query);

FOUNDATION_EXPORT SquiDBSQLiteCursor *new_SquiDBSQLiteCursor_initWithSquiDBSQLiteCursorDriver_withNSString_withSquiDBSQLiteQuery_(id<SquiDBSQLiteCursorDriver> driver, NSString *editTable, SquiDBSQLiteQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSQLiteCursor *create_SquiDBSQLiteCursor_initWithSquiDBSQLiteCursorDriver_withNSString_withSquiDBSQLiteQuery_(id<SquiDBSQLiteCursorDriver> driver, NSString *editTable, SquiDBSQLiteQuery *query);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSQLiteCursor)

@compatibility_alias ComYahooAndroidSqliteSQLiteCursor SquiDBSQLiteCursor;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SQLiteCursor_H
