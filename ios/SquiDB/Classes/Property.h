//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Property.java
//

#ifndef Property_H
#define Property_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "Field.h"
#include "J2ObjC_header.h"

@class JavaLangEnum;
@class SquiDBCriterion;
@class SquiDBFunction;
@class SquiDBSqlBuilder;
@class SquiDBSqlTable;
@class SquiDBTableModelName;
@protocol SquiDBProperty_PropertyVisitor;
@protocol SquiDBProperty_PropertyWritingVisitor;

@interface SquiDBProperty : SquiDBField < NSCopying > {
 @public
  SquiDBTableModelName *tableModelName_;
  NSString *columnDefinition_;
}

#pragma mark Public

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                            withNSString:(NSString *)newAlias;

- (SquiDBProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty *)asWithNSString:(NSString *)tableAlias
                      withNSString:(NSString *)columnAlias;

- (SquiDBProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                              withNSString:(NSString *)newAlias;

- (SquiDBProperty *)java_clone;

- (NSString *)getColumnDefinition;

- (NSString *)getExpression;

- (jboolean)isPrimaryKey;

- (NSString *)description;

#pragma mark Protected

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)alias;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)columnName;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)columnName
                                          withNSString:(NSString *)columnDef;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)columnName
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (void)appendQualifiedExpressionWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                          withBoolean:(jboolean)forSqlValidation;

- (NSString *)expressionForComparison;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty)

J2OBJC_FIELD_SETTER(SquiDBProperty, tableModelName_, SquiDBTableModelName *)
J2OBJC_FIELD_SETTER(SquiDBProperty, columnDefinition_, NSString *)

FOUNDATION_EXPORT void SquiDBProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty *self, SquiDBTableModelName *tableModelName, NSString *columnName);

FOUNDATION_EXPORT void SquiDBProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty *self, SquiDBTableModelName *tableModelName, NSString *columnName, NSString *columnDef);

FOUNDATION_EXPORT void SquiDBProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty *self, SquiDBTableModelName *tableModelName, NSString *columnName, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty *self, SquiDBFunction *function, NSString *alias);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty)

@compatibility_alias ComYahooSquidbSqlProperty SquiDBProperty;

@protocol SquiDBProperty_PropertyVisitor < JavaObject >

- (id)visitIntegerWithSquiDBProperty:(SquiDBProperty *)property
                              withId:(id)data;

- (id)visitLongWithSquiDBProperty:(SquiDBProperty *)property
                           withId:(id)data;

- (id)visitDoubleWithSquiDBProperty:(SquiDBProperty *)property
                             withId:(id)data;

- (id)visitStringWithSquiDBProperty:(SquiDBProperty *)property
                             withId:(id)data;

- (id)visitBooleanWithSquiDBProperty:(SquiDBProperty *)property
                              withId:(id)data;

- (id)visitBlobWithSquiDBProperty:(SquiDBProperty *)property
                           withId:(id)data;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_PropertyVisitor)

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_PropertyVisitor)

@protocol SquiDBProperty_PropertyWritingVisitor < JavaObject >

- (id)visitIntegerWithSquiDBProperty:(SquiDBProperty *)property
                              withId:(id)dst
                              withId:(id)data;

- (id)visitLongWithSquiDBProperty:(SquiDBProperty *)property
                           withId:(id)dst
                           withId:(id)data;

- (id)visitDoubleWithSquiDBProperty:(SquiDBProperty *)property
                             withId:(id)dst
                             withId:(id)data;

- (id)visitStringWithSquiDBProperty:(SquiDBProperty *)property
                             withId:(id)dst
                             withId:(id)data;

- (id)visitBooleanWithSquiDBProperty:(SquiDBProperty *)property
                              withId:(id)dst
                              withId:(id)data;

- (id)visitBlobWithSquiDBProperty:(SquiDBProperty *)property
                           withId:(id)dst
                           withId:(id)data;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_PropertyWritingVisitor)

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_PropertyWritingVisitor)

@interface SquiDBProperty_IntegerProperty : SquiDBProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)alias;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty_IntegerProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                            withNSString:(NSString *)columnAlias;

- (SquiDBProperty_IntegerProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty_IntegerProperty *)asWithNSString:(NSString *)tableAlias
                                      withNSString:(NSString *)columnAlias;

- (SquiDBProperty_IntegerProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                              withNSString:(NSString *)columnAlias;

+ (SquiDBProperty_IntegerProperty *)countProperty;

+ (SquiDBProperty_IntegerProperty *)countPropertyWithSquiDBField:(SquiDBField *)field
                                                     withBoolean:(jboolean)distinct;

+ (SquiDBProperty_IntegerProperty *)fromFunctionWithSquiDBFunction:(SquiDBFunction *)function
                                                      withNSString:(NSString *)selectAs;

+ (SquiDBProperty_IntegerProperty *)literalWithInt:(jint)literal
                                      withNSString:(NSString *)selectAs;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_IntegerProperty)

FOUNDATION_EXPORT void SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_IntegerProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *new_SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *create_SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_IntegerProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *new_SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *create_SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_IntegerProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *new_SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *create_SquiDBProperty_IntegerProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_IntegerProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty_IntegerProperty *self, SquiDBFunction *function, NSString *alias);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *new_SquiDBProperty_IntegerProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *alias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *create_SquiDBProperty_IntegerProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *alias);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *SquiDBProperty_IntegerProperty_fromFunctionWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *SquiDBProperty_IntegerProperty_literalWithInt_withNSString_(jint literal, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *SquiDBProperty_IntegerProperty_countProperty(void);

FOUNDATION_EXPORT SquiDBProperty_IntegerProperty *SquiDBProperty_IntegerProperty_countPropertyWithSquiDBField_withBoolean_(SquiDBField *field, jboolean distinct);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_IntegerProperty)

@interface SquiDBProperty_StringProperty : SquiDBProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)alias;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty_StringProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                           withNSString:(NSString *)columnAlias;

- (SquiDBProperty_StringProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty_StringProperty *)asWithNSString:(NSString *)tableAlias
                                     withNSString:(NSString *)columnAlias;

- (SquiDBProperty_StringProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                             withNSString:(NSString *)columnAlias;

+ (SquiDBProperty_StringProperty *)fromFunctionWithSquiDBFunction:(SquiDBFunction *)function
                                                     withNSString:(NSString *)selectAs;

- (SquiDBCriterion *)isEmpty;

- (SquiDBCriterion *)isNotEmpty;

+ (SquiDBProperty_StringProperty *)literalWithNSString:(NSString *)literal
                                          withNSString:(NSString *)selectAs;

- (SquiDBCriterion *)matchWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_StringProperty)

FOUNDATION_EXPORT void SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_StringProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_StringProperty *new_SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_StringProperty *create_SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_StringProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_StringProperty *new_SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_StringProperty *create_SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_StringProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_StringProperty *new_SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_StringProperty *create_SquiDBProperty_StringProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_StringProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty_StringProperty *self, SquiDBFunction *function, NSString *alias);

FOUNDATION_EXPORT SquiDBProperty_StringProperty *new_SquiDBProperty_StringProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *alias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_StringProperty *create_SquiDBProperty_StringProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *alias);

FOUNDATION_EXPORT SquiDBProperty_StringProperty *SquiDBProperty_StringProperty_fromFunctionWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_StringProperty *SquiDBProperty_StringProperty_literalWithNSString_withNSString_(NSString *literal, NSString *selectAs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_StringProperty)

@interface SquiDBProperty_DoubleProperty : SquiDBProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)selectAs;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty_DoubleProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                           withNSString:(NSString *)columnAlias;

- (SquiDBProperty_DoubleProperty *)asWithNSString:(NSString *)columnAlias;

- (SquiDBProperty_DoubleProperty *)asWithNSString:(NSString *)tableAlias
                                     withNSString:(NSString *)columnAlias;

- (SquiDBProperty_DoubleProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                             withNSString:(NSString *)columnAlias;

+ (SquiDBProperty_DoubleProperty *)fromFunctionWithSquiDBFunction:(SquiDBFunction *)function
                                                     withNSString:(NSString *)selectAs;

+ (SquiDBProperty_DoubleProperty *)literalWithDouble:(jdouble)literal
                                        withNSString:(NSString *)selectAs;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_DoubleProperty)

FOUNDATION_EXPORT void SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_DoubleProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *new_SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *create_SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_DoubleProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *new_SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *create_SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_DoubleProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *new_SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *create_SquiDBProperty_DoubleProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_DoubleProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty_DoubleProperty *self, SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *new_SquiDBProperty_DoubleProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *create_SquiDBProperty_DoubleProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *SquiDBProperty_DoubleProperty_fromFunctionWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_DoubleProperty *SquiDBProperty_DoubleProperty_literalWithDouble_withNSString_(jdouble literal, NSString *selectAs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_DoubleProperty)

@interface SquiDBProperty_LongProperty : SquiDBProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)selectAs;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty_LongProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                         withNSString:(NSString *)columnAlias;

- (SquiDBProperty_LongProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty_LongProperty *)asWithNSString:(NSString *)tableAlias
                                   withNSString:(NSString *)columnAlias;

- (SquiDBProperty_LongProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                           withNSString:(NSString *)columnAlias;

+ (SquiDBProperty_LongProperty *)fromFunctionWithSquiDBFunction:(SquiDBFunction *)function
                                                   withNSString:(NSString *)selectAs;

+ (SquiDBProperty_LongProperty *)literalWithLong:(jlong)literal
                                    withNSString:(NSString *)selectAs;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_LongProperty)

FOUNDATION_EXPORT void SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_LongProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_LongProperty *new_SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_LongProperty *create_SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_LongProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_LongProperty *new_SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_LongProperty *create_SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_LongProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_LongProperty *new_SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_LongProperty *create_SquiDBProperty_LongProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_LongProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty_LongProperty *self, SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_LongProperty *new_SquiDBProperty_LongProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_LongProperty *create_SquiDBProperty_LongProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_LongProperty *SquiDBProperty_LongProperty_fromFunctionWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_LongProperty *SquiDBProperty_LongProperty_literalWithLong_withNSString_(jlong literal, NSString *selectAs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_LongProperty)

@interface SquiDBProperty_BooleanProperty : SquiDBProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)selectAs;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty_BooleanProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                            withNSString:(NSString *)columnAlias;

- (SquiDBProperty_BooleanProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty_BooleanProperty *)asWithNSString:(NSString *)tableAlias
                                      withNSString:(NSString *)columnAlias;

- (SquiDBProperty_BooleanProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                              withNSString:(NSString *)columnAlias;

- (SquiDBCriterion *)eqWithBoolean:(jboolean)b;

+ (SquiDBProperty_BooleanProperty *)fromFunctionWithSquiDBFunction:(SquiDBFunction *)function
                                                      withNSString:(NSString *)selectAs;

- (SquiDBCriterion *)isFalse;

- (SquiDBCriterion *)isTrue;

+ (SquiDBProperty_BooleanProperty *)literalWithBoolean:(jboolean)literal
                                          withNSString:(NSString *)selectAs;

- (SquiDBCriterion *)neqWithBoolean:(jboolean)b;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_BooleanProperty)

FOUNDATION_EXPORT void SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_BooleanProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *new_SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *create_SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_BooleanProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *new_SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *create_SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_BooleanProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *new_SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *create_SquiDBProperty_BooleanProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_BooleanProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty_BooleanProperty *self, SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *new_SquiDBProperty_BooleanProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *create_SquiDBProperty_BooleanProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *SquiDBProperty_BooleanProperty_fromFunctionWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *selectAs);

FOUNDATION_EXPORT SquiDBProperty_BooleanProperty *SquiDBProperty_BooleanProperty_literalWithBoolean_withNSString_(jboolean literal, NSString *selectAs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_BooleanProperty)

@interface SquiDBProperty_BlobProperty : SquiDBProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (id)acceptWithSquiDBProperty_PropertyVisitor:(id<SquiDBProperty_PropertyVisitor>)visitor
                                        withId:(id)data;

- (id)acceptWithSquiDBProperty_PropertyWritingVisitor:(id<SquiDBProperty_PropertyWritingVisitor>)visitor
                                               withId:(id)dst
                                               withId:(id)data;

- (SquiDBProperty_BlobProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                         withNSString:(NSString *)columnAlias;

- (SquiDBProperty_BlobProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty_BlobProperty *)asWithNSString:(NSString *)tableAlias
                                   withNSString:(NSString *)columnAlias;

- (SquiDBProperty_BlobProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                           withNSString:(NSString *)columnAlias;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)arg0
                                    withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_BlobProperty)

FOUNDATION_EXPORT void SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_BlobProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_BlobProperty *new_SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BlobProperty *create_SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_BlobProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_BlobProperty *new_SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BlobProperty *create_SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_BlobProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_BlobProperty *new_SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_BlobProperty *create_SquiDBProperty_BlobProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_BlobProperty)

@interface SquiDBProperty_EnumProperty : SquiDBProperty_StringProperty

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBFunction:(SquiDBFunction *)function
                                    withNSString:(NSString *)alias;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)columnDefinition;

- (instancetype __nonnull)initWithSquiDBTableModelName:(SquiDBTableModelName *)tableModelName
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)alias
                                          withNSString:(NSString *)columnDefinition;

- (SquiDBProperty_EnumProperty *)asWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                         withNSString:(NSString *)columnAlias;

- (SquiDBProperty_EnumProperty *)asWithNSString:(NSString *)newAlias;

- (SquiDBProperty_EnumProperty *)asWithNSString:(NSString *)tableAlias
                                   withNSString:(NSString *)columnAlias;

- (SquiDBProperty_EnumProperty *)asSelectionFromTableWithSquiDBSqlTable:(SquiDBSqlTable *)newTable
                                                           withNSString:(NSString *)columnAlias;

+ (SquiDBProperty_EnumProperty *)literalWithJavaLangEnum:(JavaLangEnum *)literal
                                            withNSString:(NSString *)selectAs;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBProperty_EnumProperty)

FOUNDATION_EXPORT void SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_(SquiDBProperty_EnumProperty *self, SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *new_SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *create_SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_(SquiDBTableModelName *tableModelName, NSString *name);

FOUNDATION_EXPORT void SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBProperty_EnumProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *new_SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *create_SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBProperty_EnumProperty *self, SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *new_SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *create_SquiDBProperty_EnumProperty_initWithSquiDBTableModelName_withNSString_withNSString_withNSString_(SquiDBTableModelName *tableModelName, NSString *name, NSString *alias, NSString *columnDefinition);

FOUNDATION_EXPORT void SquiDBProperty_EnumProperty_initWithSquiDBFunction_withNSString_(SquiDBProperty_EnumProperty *self, SquiDBFunction *function, NSString *alias);

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *new_SquiDBProperty_EnumProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *alias) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *create_SquiDBProperty_EnumProperty_initWithSquiDBFunction_withNSString_(SquiDBFunction *function, NSString *alias);

FOUNDATION_EXPORT SquiDBProperty_EnumProperty *SquiDBProperty_EnumProperty_literalWithJavaLangEnum_withNSString_(JavaLangEnum *literal, NSString *selectAs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBProperty_EnumProperty)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Property_H
