//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SQLiteProgram.java
//

#ifndef SQLiteProgram_H
#define SQLiteProgram_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "SQLiteClosable.h"

@class IOSByteArray;
@class IOSObjectArray;
@class SquiDBSQLiteDatabase;
@class SquiDBSQLiteSession;

@interface SquiDBSQLiteProgram : SquiDBSQLiteClosable

#pragma mark Public

- (void)bindAllArgsAsStringsWithNSStringArray:(IOSObjectArray *)bindArgs;

- (void)bindBlobWithInt:(jint)index
          withByteArray:(IOSByteArray *)value;

- (void)bindDoubleWithInt:(jint)index
               withDouble:(jdouble)value;

- (void)bindLongWithInt:(jint)index
               withLong:(jlong)value;

- (void)bindNullWithInt:(jint)index;

- (void)bindStringWithInt:(jint)index
             withNSString:(NSString *)value;

- (void)clearBindings;

- (jint)getUniqueId;

#pragma mark Protected

- (jint)getConnectionFlags;

- (SquiDBSQLiteSession *)getSession;

- (void)onAllReferencesReleased;

- (void)onCorruption;

#pragma mark Package-Private

- (instancetype __nonnull)initWithSquiDBSQLiteDatabase:(SquiDBSQLiteDatabase *)db
                                          withNSString:(NSString *)sql
                                     withNSObjectArray:(IOSObjectArray *)bindArgs;

- (IOSObjectArray *)getBindArgs;

- (IOSObjectArray *)getColumnNames;

- (SquiDBSQLiteDatabase *)getDatabase;

- (NSString *)getSql;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(SquiDBSQLiteProgram)

FOUNDATION_EXPORT void SquiDBSQLiteProgram_initWithSquiDBSQLiteDatabase_withNSString_withNSObjectArray_(SquiDBSQLiteProgram *self, SquiDBSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSQLiteProgram)

@compatibility_alias ComYahooAndroidSqliteSQLiteProgram SquiDBSQLiteProgram;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SQLiteProgram_H
