//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SquidUtilities.java
//

#ifndef SquidUtilities_H
#define SquidUtilities_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class IOSObjectArray;
@class JavaIoFile;
@class JavaLangStringBuilder;
@class SquiDBSquidDatabase;
@protocol JavaUtilCollection;
@protocol SquiDBICursor;

@interface SquiDBSquidUtilities : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (void)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                   withNSObjectArray:(IOSObjectArray *)objects;

+ (void)copyDatabaseWithSquiDBSquidDatabase:(SquiDBSquidDatabase *)database
                               withNSString:(NSString *)toFolder OBJC_METHOD_FAMILY_NONE;

+ (void)copyFileWithJavaIoFile:(JavaIoFile *)inArg
                withJavaIoFile:(JavaIoFile *)outArg OBJC_METHOD_FAMILY_NONE;

+ (void)dumpCurrentRowWithSquiDBICursor:(id<SquiDBICursor>)cursor;

+ (void)dumpCurrentRowWithSquiDBICursor:(id<SquiDBICursor>)cursor
                                withInt:(jint)maxColumnWidth;

+ (void)dumpCurrentRowWithSquiDBICursor:(id<SquiDBICursor>)cursor
                                withInt:(jint)maxColumnWidth
              withJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

+ (void)dumpCurrentRowWithSquiDBICursor:(id<SquiDBICursor>)cursor
              withJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

+ (void)dumpCursorWithSquiDBICursor:(id<SquiDBICursor>)cursor;

+ (void)dumpCursorWithSquiDBICursor:(id<SquiDBICursor>)cursor
                            withInt:(jint)maxColumnWidth;

+ (void)dumpCursorWithSquiDBICursor:(id<SquiDBICursor>)cursor
                            withInt:(jint)maxColumnWidth
          withJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

+ (void)dumpCursorWithSquiDBICursor:(id<SquiDBICursor>)cursor
          withJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBSquidUtilities)

FOUNDATION_EXPORT void SquiDBSquidUtilities_init(SquiDBSquidUtilities *self);

FOUNDATION_EXPORT SquiDBSquidUtilities *new_SquiDBSquidUtilities_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSquidUtilities *create_SquiDBSquidUtilities_init(void);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCursorWithSquiDBICursor_(id<SquiDBICursor> cursor);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCursorWithSquiDBICursor_withInt_(id<SquiDBICursor> cursor, jint maxColumnWidth);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCursorWithSquiDBICursor_withJavaLangStringBuilder_(id<SquiDBICursor> cursor, JavaLangStringBuilder *builder);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCursorWithSquiDBICursor_withInt_withJavaLangStringBuilder_(id<SquiDBICursor> cursor, jint maxColumnWidth, JavaLangStringBuilder *builder);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCurrentRowWithSquiDBICursor_(id<SquiDBICursor> cursor);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCurrentRowWithSquiDBICursor_withInt_(id<SquiDBICursor> cursor, jint maxColumnWidth);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCurrentRowWithSquiDBICursor_withJavaLangStringBuilder_(id<SquiDBICursor> cursor, JavaLangStringBuilder *builder);

FOUNDATION_EXPORT void SquiDBSquidUtilities_dumpCurrentRowWithSquiDBICursor_withInt_withJavaLangStringBuilder_(id<SquiDBICursor> cursor, jint maxColumnWidth, JavaLangStringBuilder *builder);

FOUNDATION_EXPORT void SquiDBSquidUtilities_addAllWithJavaUtilCollection_withNSObjectArray_(id<JavaUtilCollection> collection, IOSObjectArray *objects);

FOUNDATION_EXPORT void SquiDBSquidUtilities_copyDatabaseWithSquiDBSquidDatabase_withNSString_(SquiDBSquidDatabase *database, NSString *toFolder);

FOUNDATION_EXPORT void SquiDBSquidUtilities_copyFileWithJavaIoFile_withJavaIoFile_(JavaIoFile *inArg, JavaIoFile *outArg);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSquidUtilities)

@compatibility_alias ComYahooSquidbUtilitySquidUtilities SquiDBSquidUtilities;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SquidUtilities_H
