//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CloseGuard.java
//

#include "CloseGuard.h"
#include "J2ObjC_source.h"
#include "Logger.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Throwable.h"

@interface SquiDBCloseGuard () {
 @public
  JavaLangThrowable *allocationSite_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(SquiDBCloseGuard, allocationSite_, JavaLangThrowable *)

inline SquiDBCloseGuard *SquiDBCloseGuard_get_NOOP(void);
static SquiDBCloseGuard *SquiDBCloseGuard_NOOP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBCloseGuard, NOOP, SquiDBCloseGuard *)

inline jboolean SquiDBCloseGuard_get_ENABLED(void);
inline jboolean SquiDBCloseGuard_set_ENABLED(jboolean value);
static volatile_jboolean SquiDBCloseGuard_ENABLED = true;
J2OBJC_STATIC_FIELD_PRIMITIVE_VOLATILE(SquiDBCloseGuard, ENABLED, jboolean)

inline id<SquiDBCloseGuard_Reporter> SquiDBCloseGuard_get_REPORTER(void);
inline id<SquiDBCloseGuard_Reporter> SquiDBCloseGuard_set_REPORTER(id<SquiDBCloseGuard_Reporter> value);
static volatile_id SquiDBCloseGuard_REPORTER;
J2OBJC_STATIC_FIELD_OBJ_VOLATILE(SquiDBCloseGuard, REPORTER, id<SquiDBCloseGuard_Reporter>)

__attribute__((unused)) static void SquiDBCloseGuard_init(SquiDBCloseGuard *self);

__attribute__((unused)) static SquiDBCloseGuard *new_SquiDBCloseGuard_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SquiDBCloseGuard *create_SquiDBCloseGuard_init(void);

@interface SquiDBCloseGuard_Reporter : NSObject

@end

@interface SquiDBCloseGuard_DefaultReporter : NSObject < SquiDBCloseGuard_Reporter >

- (instancetype)init;

- (void)reportWithNSString:(NSString *)message
     withJavaLangThrowable:(JavaLangThrowable *)allocationSite;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBCloseGuard_DefaultReporter)

__attribute__((unused)) static void SquiDBCloseGuard_DefaultReporter_init(SquiDBCloseGuard_DefaultReporter *self);

__attribute__((unused)) static SquiDBCloseGuard_DefaultReporter *new_SquiDBCloseGuard_DefaultReporter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SquiDBCloseGuard_DefaultReporter *create_SquiDBCloseGuard_DefaultReporter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBCloseGuard_DefaultReporter)

J2OBJC_INITIALIZED_DEFN(SquiDBCloseGuard)

@implementation SquiDBCloseGuard

+ (SquiDBCloseGuard *)get {
  return SquiDBCloseGuard_get();
}

+ (void)setEnabledWithBoolean:(jboolean)enabled {
  SquiDBCloseGuard_setEnabledWithBoolean_(enabled);
}

+ (void)setReporterWithSquiDBCloseGuard_Reporter:(id<SquiDBCloseGuard_Reporter>)reporter {
  SquiDBCloseGuard_setReporterWithSquiDBCloseGuard_Reporter_(reporter);
}

+ (id<SquiDBCloseGuard_Reporter>)getReporter {
  return SquiDBCloseGuard_getReporter();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SquiDBCloseGuard_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)openWithNSString:(NSString *)closer {
  if (closer == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"closer == null");
  }
  if (self == SquiDBCloseGuard_NOOP || !JreLoadVolatileBoolean(&SquiDBCloseGuard_ENABLED)) {
    return;
  }
  NSString *message = JreStrcat("$$$", @"Explicit termination method '", closer, @"' not called");
  allocationSite_ = new_JavaLangThrowable_initWithNSString_(message);
}

- (void)close {
  allocationSite_ = nil;
}

- (void)warnIfOpen {
  if (allocationSite_ == nil || !JreLoadVolatileBoolean(&SquiDBCloseGuard_ENABLED)) {
    return;
  }
  NSString *message = (@"A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.");
  [((id<SquiDBCloseGuard_Reporter>) nil_chk(JreLoadVolatileId(&SquiDBCloseGuard_REPORTER))) reportWithNSString:message withJavaLangThrowable:allocationSite_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LSquiDBCloseGuard;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LSquiDBCloseGuard_Reporter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(get);
  methods[1].selector = @selector(setEnabledWithBoolean:);
  methods[2].selector = @selector(setReporterWithSquiDBCloseGuard_Reporter:);
  methods[3].selector = @selector(getReporter);
  methods[4].selector = @selector(init);
  methods[5].selector = @selector(openWithNSString:);
  methods[6].selector = @selector(close);
  methods[7].selector = @selector(warnIfOpen);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NOOP", "LSquiDBCloseGuard;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "ENABLED", "Z", .constantValue.asLong = 0, 0x4a, -1, 7, -1, -1 },
    { "REPORTER", "LSquiDBCloseGuard_Reporter;", .constantValue.asLong = 0, 0x4a, -1, 8, -1, -1 },
    { "allocationSite_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setEnabled", "Z", "setReporter", "LSquiDBCloseGuard_Reporter;", "open", "LNSString;", &SquiDBCloseGuard_NOOP, &SquiDBCloseGuard_ENABLED, &SquiDBCloseGuard_REPORTER, "LSquiDBCloseGuard_Reporter;LSquiDBCloseGuard_DefaultReporter;" };
  static const J2ObjcClassInfo _SquiDBCloseGuard = { "CloseGuard", "com.yahoo.android.sqlite", ptrTable, methods, fields, 7, 0x11, 8, 4, -1, 9, -1, -1, -1 };
  return &_SquiDBCloseGuard;
}

+ (void)initialize {
  if (self == [SquiDBCloseGuard class]) {
    SquiDBCloseGuard_NOOP = new_SquiDBCloseGuard_init();
    (void) JreVolatileStrongAssign(&SquiDBCloseGuard_REPORTER, new_SquiDBCloseGuard_DefaultReporter_init());
    J2OBJC_SET_INITIALIZED(SquiDBCloseGuard)
  }
}

@end

SquiDBCloseGuard *SquiDBCloseGuard_get() {
  SquiDBCloseGuard_initialize();
  if (!JreLoadVolatileBoolean(&SquiDBCloseGuard_ENABLED)) {
    return SquiDBCloseGuard_NOOP;
  }
  return new_SquiDBCloseGuard_init();
}

void SquiDBCloseGuard_setEnabledWithBoolean_(jboolean enabled) {
  SquiDBCloseGuard_initialize();
  JreAssignVolatileBoolean(&SquiDBCloseGuard_ENABLED, enabled);
}

void SquiDBCloseGuard_setReporterWithSquiDBCloseGuard_Reporter_(id<SquiDBCloseGuard_Reporter> reporter) {
  SquiDBCloseGuard_initialize();
  if (reporter == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"reporter == null");
  }
  (void) JreVolatileStrongAssign(&SquiDBCloseGuard_REPORTER, reporter);
}

id<SquiDBCloseGuard_Reporter> SquiDBCloseGuard_getReporter() {
  SquiDBCloseGuard_initialize();
  return JreLoadVolatileId(&SquiDBCloseGuard_REPORTER);
}

void SquiDBCloseGuard_init(SquiDBCloseGuard *self) {
  NSObject_init(self);
}

SquiDBCloseGuard *new_SquiDBCloseGuard_init() {
  J2OBJC_NEW_IMPL(SquiDBCloseGuard, init)
}

SquiDBCloseGuard *create_SquiDBCloseGuard_init() {
  J2OBJC_CREATE_IMPL(SquiDBCloseGuard, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBCloseGuard)

J2OBJC_NAME_MAPPING(SquiDBCloseGuard, "com.yahoo.android.sqlite", "SquiDB")

@implementation SquiDBCloseGuard_Reporter

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(reportWithNSString:withJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "report", "LNSString;LJavaLangThrowable;", "LSquiDBCloseGuard;" };
  static const J2ObjcClassInfo _SquiDBCloseGuard_Reporter = { "Reporter", "com.yahoo.android.sqlite", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_SquiDBCloseGuard_Reporter;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(SquiDBCloseGuard_Reporter)

@implementation SquiDBCloseGuard_DefaultReporter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SquiDBCloseGuard_DefaultReporter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reportWithNSString:(NSString *)message
     withJavaLangThrowable:(JavaLangThrowable *)allocationSite {
  SquiDBLogger_wWithNSString_withNSString_withJavaLangThrowable_(SquiDBLogger_LOG_TAG, message, allocationSite);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reportWithNSString:withJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "report", "LNSString;LJavaLangThrowable;", "LSquiDBCloseGuard;" };
  static const J2ObjcClassInfo _SquiDBCloseGuard_DefaultReporter = { "DefaultReporter", "com.yahoo.android.sqlite", ptrTable, methods, NULL, 7, 0x1a, 2, 0, 2, -1, -1, -1, -1 };
  return &_SquiDBCloseGuard_DefaultReporter;
}

@end

void SquiDBCloseGuard_DefaultReporter_init(SquiDBCloseGuard_DefaultReporter *self) {
  NSObject_init(self);
}

SquiDBCloseGuard_DefaultReporter *new_SquiDBCloseGuard_DefaultReporter_init() {
  J2OBJC_NEW_IMPL(SquiDBCloseGuard_DefaultReporter, init)
}

SquiDBCloseGuard_DefaultReporter *create_SquiDBCloseGuard_DefaultReporter_init() {
  J2OBJC_CREATE_IMPL(SquiDBCloseGuard_DefaultReporter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBCloseGuard_DefaultReporter)
