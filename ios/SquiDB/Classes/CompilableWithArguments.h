//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CompilableWithArguments.java
//

#ifndef CompilableWithArguments_H
#define CompilableWithArguments_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class SquiDBCompileContext;
@class SquiDBSqlBuilder;
@class SquiDBVersionCode;

@interface SquiDBCompilableWithArguments : NSObject
@property (readonly, class) SquiDBVersionCode *VERSION_FOR_TO_STRING NS_SWIFT_NAME(VERSION_FOR_TO_STRING);

+ (SquiDBVersionCode *)VERSION_FOR_TO_STRING;

#pragma mark Public

- (NSString *)toRawSqlWithSquiDBCompileContext:(SquiDBCompileContext *)compileContext;

- (NSString *)toRawSqlWithSquiDBVersionCode:(SquiDBVersionCode *)sqliteVersion;

- (NSString *)description;

#pragma mark Protected

- (SquiDBSqlBuilder *)buildSqlWithSquiDBCompileContext:(SquiDBCompileContext *)compileContext
                                           withBoolean:(jboolean)withBoundArguments
                                           withBoolean:(jboolean)forSqlValidation;

- (SquiDBSqlBuilder *)buildSqlWithSquiDBVersionCode:(SquiDBVersionCode *)sqliteVersion
                                        withBoolean:(jboolean)withBoundArguments
                                        withBoolean:(jboolean)forSqlValidation;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

- (void)appendToSqlBuilderWithSquiDBSqlBuilder:(SquiDBSqlBuilder *)builder
                                   withBoolean:(jboolean)forSqlValidation;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(SquiDBCompilableWithArguments)

inline SquiDBVersionCode *SquiDBCompilableWithArguments_get_VERSION_FOR_TO_STRING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT SquiDBVersionCode *SquiDBCompilableWithArguments_VERSION_FOR_TO_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(SquiDBCompilableWithArguments, VERSION_FOR_TO_STRING, SquiDBVersionCode *)

FOUNDATION_EXPORT void SquiDBCompilableWithArguments_initPackagePrivate(SquiDBCompilableWithArguments *self);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBCompilableWithArguments)

@compatibility_alias ComYahooSquidbSqlCompilableWithArguments SquiDBCompilableWithArguments;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // CompilableWithArguments_H
