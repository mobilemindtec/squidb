//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/CursorWindowAllocationException.java
//

#include "CursorWindowAllocationException.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"

@implementation SquiDBCursorWindowAllocationException

- (instancetype)initWithNSString:(NSString *)description_ {
  SquiDBCursorWindowAllocationException_initWithNSString_(self, description_);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _SquiDBCursorWindowAllocationException = { "CursorWindowAllocationException", "com.yahoo.android.sqlite", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
  return &_SquiDBCursorWindowAllocationException;
}

@end

void SquiDBCursorWindowAllocationException_initWithNSString_(SquiDBCursorWindowAllocationException *self, NSString *description_) {
  JavaLangRuntimeException_initWithNSString_(self, description_);
}

SquiDBCursorWindowAllocationException *new_SquiDBCursorWindowAllocationException_initWithNSString_(NSString *description_) {
  J2OBJC_NEW_IMPL(SquiDBCursorWindowAllocationException, initWithNSString_, description_)
}

SquiDBCursorWindowAllocationException *create_SquiDBCursorWindowAllocationException_initWithNSString_(NSString *description_) {
  J2OBJC_CREATE_IMPL(SquiDBCursorWindowAllocationException, initWithNSString_, description_)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBCursorWindowAllocationException)

J2OBJC_NAME_MAPPING(SquiDBCursorWindowAllocationException, "com.yahoo.android.sqlite", "SquiDB")
