//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/AbstractWindowedCursor.java
//

#ifndef AbstractWindowedCursor_H
#define AbstractWindowedCursor_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AbstractCursor.h"
#include "J2ObjC_header.h"

@class ComYahooAndroidSqliteCursorWindow;
@class IOSByteArray;

@interface ComYahooAndroidSqliteAbstractWindowedCursor : ComYahooAndroidSqliteAbstractCursor {
 @public
  ComYahooAndroidSqliteCursorWindow *mWindow_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (IOSByteArray *)getBlobWithInt:(jint)columnIndex;

- (jdouble)getDoubleWithInt:(jint)columnIndex;

- (jfloat)getFloatWithInt:(jint)columnIndex;

- (jint)getIntWithInt:(jint)columnIndex;

- (jlong)getLongWithInt:(jint)columnIndex;

- (jshort)getShortWithInt:(jint)columnIndex;

- (NSString *)getStringWithInt:(jint)columnIndex;

- (jint)getTypeWithInt:(jint)columnIndex;

- (ComYahooAndroidSqliteCursorWindow *)getWindow;

- (jboolean)hasWindow;

- (jboolean)isBlobWithInt:(jint)columnIndex;

- (jboolean)isFloatWithInt:(jint)columnIndex;

- (jboolean)isLongWithInt:(jint)columnIndex;

- (jboolean)isNullWithInt:(jint)columnIndex;

- (jboolean)isStringWithInt:(jint)columnIndex;

- (void)setWindowWithComYahooAndroidSqliteCursorWindow:(ComYahooAndroidSqliteCursorWindow *)window;

#pragma mark Protected

- (void)checkPosition;

- (void)clearOrCreateWindowWithNSString:(NSString *)name;

- (void)closeWindow;

- (void)onDeactivateOrClose;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooAndroidSqliteAbstractWindowedCursor)

J2OBJC_FIELD_SETTER(ComYahooAndroidSqliteAbstractWindowedCursor, mWindow_, ComYahooAndroidSqliteCursorWindow *)

FOUNDATION_EXPORT void ComYahooAndroidSqliteAbstractWindowedCursor_init(ComYahooAndroidSqliteAbstractWindowedCursor *self);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooAndroidSqliteAbstractWindowedCursor)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // AbstractWindowedCursor_H
