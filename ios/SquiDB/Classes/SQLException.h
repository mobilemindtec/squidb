//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SQLException.java
//

#ifndef SQLException_H
#define SQLException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface SquiDBSQLException : JavaLangRuntimeException

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)error;

- (instancetype __nonnull)initWithNSString:(NSString *)error
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBSQLException)

FOUNDATION_EXPORT void SquiDBSQLException_init(SquiDBSQLException *self);

FOUNDATION_EXPORT SquiDBSQLException *new_SquiDBSQLException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSQLException *create_SquiDBSQLException_init(void);

FOUNDATION_EXPORT void SquiDBSQLException_initWithNSString_(SquiDBSQLException *self, NSString *error);

FOUNDATION_EXPORT SquiDBSQLException *new_SquiDBSQLException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSQLException *create_SquiDBSQLException_initWithNSString_(NSString *error);

FOUNDATION_EXPORT void SquiDBSQLException_initWithNSString_withJavaLangThrowable_(SquiDBSQLException *self, NSString *error, JavaLangThrowable *cause);

FOUNDATION_EXPORT SquiDBSQLException *new_SquiDBSQLException_initWithNSString_withJavaLangThrowable_(NSString *error, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBSQLException *create_SquiDBSQLException_initWithNSString_withJavaLangThrowable_(NSString *error, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBSQLException)

@compatibility_alias ComYahooAndroidSqliteSQLException SquiDBSQLException;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // SQLException_H
