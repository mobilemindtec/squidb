//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DataChangedNotifier.java
//

#include "AbstractModel.h"
#include "DataChangedNotifier.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "SqlTable.h"
#include "SquidDatabase.h"
#include "SquidUtilities.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/ThreadLocal.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface SquiDBDataChangedNotifier () {
 @public
  id<JavaUtilSet> tables_;
  jboolean enabled_;
  JavaLangThreadLocal *notifyObjectAccumulator_;
}

@end

J2OBJC_FIELD_SETTER(SquiDBDataChangedNotifier, tables_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(SquiDBDataChangedNotifier, notifyObjectAccumulator_, JavaLangThreadLocal *)

__attribute__((unused)) static void SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(SquiDBDataChangedNotifier_DBOperation *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static SquiDBDataChangedNotifier_DBOperation *new_SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface SquiDBDataChangedNotifier_1 : JavaLangThreadLocal

- (instancetype)init;

- (id<JavaUtilSet>)initialValue OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)get;

- (id<JavaUtilSet>)childValueWithId:(id<JavaUtilSet>)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBDataChangedNotifier_1)

__attribute__((unused)) static void SquiDBDataChangedNotifier_1_init(SquiDBDataChangedNotifier_1 *self);

__attribute__((unused)) static SquiDBDataChangedNotifier_1 *new_SquiDBDataChangedNotifier_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static SquiDBDataChangedNotifier_1 *create_SquiDBDataChangedNotifier_1_init(void);

@implementation SquiDBDataChangedNotifier

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SquiDBDataChangedNotifier_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithSquiDBSqlTableArray:(IOSObjectArray *)tables {
  SquiDBDataChangedNotifier_initWithSquiDBSqlTableArray_(self, tables);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)tables {
  SquiDBDataChangedNotifier_initWithJavaUtilCollection_(self, tables);
  return self;
}

- (id<JavaUtilSet>)whichTables {
  return tables_;
}

- (void)setEnabledWithBoolean:(jboolean)enabled {
  self->enabled_ = enabled;
}

- (jboolean)onDataChangedWithSquiDBSqlTable:(SquiDBSqlTable *)table
                    withSquiDBSquidDatabase:(SquiDBSquidDatabase *)database
  withSquiDBDataChangedNotifier_DBOperation:(SquiDBDataChangedNotifier_DBOperation *)operation
                    withSquiDBAbstractModel:(SquiDBAbstractModel *)modelValues
                                   withLong:(jlong)rowId {
  return enabled_ && [self accumulateNotificationObjectsWithJavaUtilSet:[((JavaLangThreadLocal *) nil_chk(notifyObjectAccumulator_)) get] withSquiDBSqlTable:table withSquiDBSquidDatabase:database withSquiDBDataChangedNotifier_DBOperation:operation withSquiDBAbstractModel:modelValues withLong:rowId];
}

- (jboolean)accumulateNotificationObjectsWithJavaUtilSet:(id<JavaUtilSet>)accumulatorSet
                                      withSquiDBSqlTable:(SquiDBSqlTable *)table
                                 withSquiDBSquidDatabase:(SquiDBSquidDatabase *)database
               withSquiDBDataChangedNotifier_DBOperation:(SquiDBDataChangedNotifier_DBOperation *)operation
                                 withSquiDBAbstractModel:(SquiDBAbstractModel *)modelValues
                                                withLong:(jlong)rowId {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)flushAccumulatedNotificationsWithSquiDBSquidDatabase:(SquiDBSquidDatabase *)database
                                                 withBoolean:(jboolean)shouldSendNotifications {
  id<JavaUtilSet> accumulatedNotifications = [((JavaLangThreadLocal *) nil_chk(notifyObjectAccumulator_)) get];
  if (enabled_ && shouldSendNotifications) {
    [self sendNotificationsToAllWithSquiDBSquidDatabase:database withJavaUtilSet:accumulatedNotifications];
  }
  [((id<JavaUtilSet>) nil_chk(accumulatedNotifications)) clear];
}

- (void)sendNotificationsToAllWithSquiDBSquidDatabase:(SquiDBSquidDatabase *)database
                                      withJavaUtilSet:(id<JavaUtilSet>)notifyObjects {
  for (id __strong notifyObject in nil_chk(notifyObjects)) {
    [self sendNotificationWithSquiDBSquidDatabase:database withId:notifyObject];
  }
}

- (void)sendNotificationWithSquiDBSquidDatabase:(SquiDBSquidDatabase *)database
                                         withId:(id)notifyObject {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x81, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, 7, 8, -1, 9, -1, -1 },
    { NULL, "Z", 0x404, 10, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x10, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 15, 16, -1, 17, -1, -1 },
    { NULL, "V", 0x404, 18, 19, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithSquiDBSqlTableArray:);
  methods[2].selector = @selector(initWithJavaUtilCollection:);
  methods[3].selector = @selector(whichTables);
  methods[4].selector = @selector(setEnabledWithBoolean:);
  methods[5].selector = @selector(onDataChangedWithSquiDBSqlTable:withSquiDBSquidDatabase:withSquiDBDataChangedNotifier_DBOperation:withSquiDBAbstractModel:withLong:);
  methods[6].selector = @selector(accumulateNotificationObjectsWithJavaUtilSet:withSquiDBSqlTable:withSquiDBSquidDatabase:withSquiDBDataChangedNotifier_DBOperation:withSquiDBAbstractModel:withLong:);
  methods[7].selector = @selector(flushAccumulatedNotificationsWithSquiDBSquidDatabase:withBoolean:);
  methods[8].selector = @selector(sendNotificationsToAllWithSquiDBSquidDatabase:withJavaUtilSet:);
  methods[9].selector = @selector(sendNotificationWithSquiDBSquidDatabase:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tables_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
    { "enabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "notifyObjectAccumulator_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x2, -1, -1, 22, -1 },
  };
  static const void *ptrTable[] = { "[LSquiDBSqlTable;", "([Lcom/yahoo/squidb/sql/SqlTable<*>;)V", "LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/yahoo/squidb/sql/SqlTable<*>;>;)V", "()Ljava/util/Set<Lcom/yahoo/squidb/sql/SqlTable<*>;>;", "setEnabled", "Z", "onDataChanged", "LSquiDBSqlTable;LSquiDBSquidDatabase;LSquiDBDataChangedNotifier_DBOperation;LSquiDBAbstractModel;J", "(Lcom/yahoo/squidb/sql/SqlTable<*>;Lcom/yahoo/squidb/data/SquidDatabase;Lcom/yahoo/squidb/data/DataChangedNotifier$DBOperation;Lcom/yahoo/squidb/data/AbstractModel;J)Z", "accumulateNotificationObjects", "LJavaUtilSet;LSquiDBSqlTable;LSquiDBSquidDatabase;LSquiDBDataChangedNotifier_DBOperation;LSquiDBAbstractModel;J", "(Ljava/util/Set<TT;>;Lcom/yahoo/squidb/sql/SqlTable<*>;Lcom/yahoo/squidb/data/SquidDatabase;Lcom/yahoo/squidb/data/DataChangedNotifier$DBOperation;Lcom/yahoo/squidb/data/AbstractModel;J)Z", "flushAccumulatedNotifications", "LSquiDBSquidDatabase;Z", "sendNotificationsToAll", "LSquiDBSquidDatabase;LJavaUtilSet;", "(Lcom/yahoo/squidb/data/SquidDatabase;Ljava/util/Set<TT;>;)V", "sendNotification", "LSquiDBSquidDatabase;LNSObject;", "(Lcom/yahoo/squidb/data/SquidDatabase;TT;)V", "Ljava/util/Set<Lcom/yahoo/squidb/sql/SqlTable<*>;>;", "Ljava/lang/ThreadLocal<Ljava/util/Set<TT;>;>;", "LSquiDBDataChangedNotifier_DBOperation;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _SquiDBDataChangedNotifier = { "DataChangedNotifier", "com.yahoo.squidb.data", ptrTable, methods, fields, 7, 0x401, 10, 3, -1, 23, -1, 24, -1 };
  return &_SquiDBDataChangedNotifier;
}

@end

void SquiDBDataChangedNotifier_init(SquiDBDataChangedNotifier *self) {
  NSObject_init(self);
  self->tables_ = new_JavaUtilHashSet_init();
  self->enabled_ = true;
  self->notifyObjectAccumulator_ = new_SquiDBDataChangedNotifier_1_init();
}

void SquiDBDataChangedNotifier_initWithSquiDBSqlTableArray_(SquiDBDataChangedNotifier *self, IOSObjectArray *tables) {
  NSObject_init(self);
  self->tables_ = new_JavaUtilHashSet_init();
  self->enabled_ = true;
  self->notifyObjectAccumulator_ = new_SquiDBDataChangedNotifier_1_init();
  SquiDBSquidUtilities_addAllWithJavaUtilCollection_withNSObjectArray_(self->tables_, tables);
}

void SquiDBDataChangedNotifier_initWithJavaUtilCollection_(SquiDBDataChangedNotifier *self, id<JavaUtilCollection> tables) {
  NSObject_init(self);
  self->tables_ = new_JavaUtilHashSet_init();
  self->enabled_ = true;
  self->notifyObjectAccumulator_ = new_SquiDBDataChangedNotifier_1_init();
  [self->tables_ addAllWithJavaUtilCollection:tables];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBDataChangedNotifier)

J2OBJC_NAME_MAPPING(SquiDBDataChangedNotifier, "com.yahoo.squidb.data", "SquiDB")

J2OBJC_INITIALIZED_DEFN(SquiDBDataChangedNotifier_DBOperation)

SquiDBDataChangedNotifier_DBOperation *SquiDBDataChangedNotifier_DBOperation_values_[3];

@implementation SquiDBDataChangedNotifier_DBOperation

+ (SquiDBDataChangedNotifier_DBOperation *)INSERT {
  return JreEnum(SquiDBDataChangedNotifier_DBOperation, INSERT);
}

+ (SquiDBDataChangedNotifier_DBOperation *)UPDATE {
  return JreEnum(SquiDBDataChangedNotifier_DBOperation, UPDATE);
}

+ (SquiDBDataChangedNotifier_DBOperation *)DELETE {
  return JreEnum(SquiDBDataChangedNotifier_DBOperation, DELETE);
}

+ (IOSObjectArray *)values {
  return SquiDBDataChangedNotifier_DBOperation_values();
}

+ (SquiDBDataChangedNotifier_DBOperation *)valueOfWithNSString:(NSString *)name {
  return SquiDBDataChangedNotifier_DBOperation_valueOfWithNSString_(name);
}

- (SquiDBDataChangedNotifier_DBOperation_Enum)toNSEnum {
  return (SquiDBDataChangedNotifier_DBOperation_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LSquiDBDataChangedNotifier_DBOperation;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSquiDBDataChangedNotifier_DBOperation;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSERT", "LSquiDBDataChangedNotifier_DBOperation;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "UPDATE", "LSquiDBDataChangedNotifier_DBOperation;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "DELETE", "LSquiDBDataChangedNotifier_DBOperation;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(SquiDBDataChangedNotifier_DBOperation, INSERT), &JreEnum(SquiDBDataChangedNotifier_DBOperation, UPDATE), &JreEnum(SquiDBDataChangedNotifier_DBOperation, DELETE), "LSquiDBDataChangedNotifier;", "Ljava/lang/Enum<Lcom/yahoo/squidb/data/DataChangedNotifier$DBOperation;>;" };
  static const J2ObjcClassInfo _SquiDBDataChangedNotifier_DBOperation = { "DBOperation", "com.yahoo.squidb.data", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_SquiDBDataChangedNotifier_DBOperation;
}

+ (void)initialize {
  if (self == [SquiDBDataChangedNotifier_DBOperation class]) {
    JreEnum(SquiDBDataChangedNotifier_DBOperation, INSERT) = new_SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(JreEnumConstantName(SquiDBDataChangedNotifier_DBOperation_class_(), 0), 0);
    JreEnum(SquiDBDataChangedNotifier_DBOperation, UPDATE) = new_SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(JreEnumConstantName(SquiDBDataChangedNotifier_DBOperation_class_(), 1), 1);
    JreEnum(SquiDBDataChangedNotifier_DBOperation, DELETE) = new_SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(JreEnumConstantName(SquiDBDataChangedNotifier_DBOperation_class_(), 2), 2);
    J2OBJC_SET_INITIALIZED(SquiDBDataChangedNotifier_DBOperation)
  }
}

@end

void SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(SquiDBDataChangedNotifier_DBOperation *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

SquiDBDataChangedNotifier_DBOperation *new_SquiDBDataChangedNotifier_DBOperation_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(SquiDBDataChangedNotifier_DBOperation, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *SquiDBDataChangedNotifier_DBOperation_values() {
  SquiDBDataChangedNotifier_DBOperation_initialize();
  return [IOSObjectArray arrayWithObjects:SquiDBDataChangedNotifier_DBOperation_values_ count:3 type:SquiDBDataChangedNotifier_DBOperation_class_()];
}

SquiDBDataChangedNotifier_DBOperation *SquiDBDataChangedNotifier_DBOperation_valueOfWithNSString_(NSString *name) {
  SquiDBDataChangedNotifier_DBOperation_initialize();
  for (int i = 0; i < 3; i++) {
    SquiDBDataChangedNotifier_DBOperation *e = SquiDBDataChangedNotifier_DBOperation_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

SquiDBDataChangedNotifier_DBOperation *SquiDBDataChangedNotifier_DBOperation_fromOrdinal(NSUInteger ordinal) {
  SquiDBDataChangedNotifier_DBOperation_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return SquiDBDataChangedNotifier_DBOperation_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SquiDBDataChangedNotifier_DBOperation)

@implementation SquiDBDataChangedNotifier_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SquiDBDataChangedNotifier_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilSet>)initialValue {
  return new_JavaUtilHashSet_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x4, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/util/Set<TT;>;", "LSquiDBDataChangedNotifier;", "Ljava/lang/ThreadLocal<Ljava/util/Set<TT;>;>;" };
  static const J2ObjcClassInfo _SquiDBDataChangedNotifier_1 = { "", "com.yahoo.squidb.data", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 1, -1, -1, 2, -1 };
  return &_SquiDBDataChangedNotifier_1;
}

@end

void SquiDBDataChangedNotifier_1_init(SquiDBDataChangedNotifier_1 *self) {
  JavaLangThreadLocal_init(self);
}

SquiDBDataChangedNotifier_1 *new_SquiDBDataChangedNotifier_1_init() {
  J2OBJC_NEW_IMPL(SquiDBDataChangedNotifier_1, init)
}

SquiDBDataChangedNotifier_1 *create_SquiDBDataChangedNotifier_1_init() {
  J2OBJC_CREATE_IMPL(SquiDBDataChangedNotifier_1, init)
}
