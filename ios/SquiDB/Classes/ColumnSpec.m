//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ColumnSpec.java
//

#include "ColumnSpec.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *SquiDBColumnSpec__Annotations$0(void);

NSString *SquiDBColumnSpec_DEFAULT_NONE = @"!NONE!";
NSString *SquiDBColumnSpec_DEFAULT_NULL = @"!NULL!";

@implementation SquiDBColumnSpec

+ (NSString *)DEFAULT_NONE {
  return SquiDBColumnSpec_DEFAULT_NONE;
}

+ (NSString *)DEFAULT_NULL {
  return SquiDBColumnSpec_DEFAULT_NULL;
}

@synthesize name = name_;
@synthesize constraints = constraints_;
@synthesize defaultValue = defaultValue_;

+ (NSString *)nameDefault {
  return @"";
}

+ (NSString *)constraintsDefault {
  return @"!NONE!";
}

+ (NSString *)defaultValueDefault {
  return @"!NONE!";
}

- (IOSClass *)annotationType {
  return SquiDBColumnSpec_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@com.yahoo.squidb.annotations.ColumnSpec(name=%@, constraints=%@, defaultValue=%@)", name_, constraints_, defaultValue_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(name);
  methods[1].selector = @selector(constraints);
  methods[2].selector = @selector(defaultValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_NONE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "DEFAULT_NULL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "constraints_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "defaultValue_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { &SquiDBColumnSpec_DEFAULT_NONE, &SquiDBColumnSpec_DEFAULT_NULL, (void *)&SquiDBColumnSpec__Annotations$0 };
  static const J2ObjcClassInfo _SquiDBColumnSpec = { "ColumnSpec", "com.yahoo.squidb.annotations", ptrTable, methods, fields, 7, 0x2609, 3, 5, -1, -1, -1, -1, 2 };
  return &_SquiDBColumnSpec;
}

@end

id<SquiDBColumnSpec> create_SquiDBColumnSpec(NSString *constraints, NSString *defaultValue, NSString *name) {
  SquiDBColumnSpec *self = AUTORELEASE([[SquiDBColumnSpec alloc] init]);
  self->constraints_ = RETAIN_(constraints);
  self->defaultValue_ = RETAIN_(defaultValue);
  self->name_ = RETAIN_(name);
  return self;
}

IOSObjectArray *SquiDBColumnSpec__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(SquiDBColumnSpec)

J2OBJC_NAME_MAPPING(SquiDBColumnSpec, "com.yahoo.squidb.annotations", "SquiDB")
