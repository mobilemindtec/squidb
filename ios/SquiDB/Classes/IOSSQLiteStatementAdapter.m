//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/IOSSQLiteStatementAdapter.java
//

#include "IOSPrimitiveArray.h"
#include "IOSSQLiteStatementAdapter.h"
#include "J2ObjC_source.h"
#include "SQLiteStatement.h"

@interface ComYahooSquidbIosIOSSQLiteStatementAdapter () {
 @public
  ComYahooAndroidSqliteSQLiteStatement *statement_;
}

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbIosIOSSQLiteStatementAdapter, statement_, ComYahooAndroidSqliteSQLiteStatement *)

@implementation ComYahooSquidbIosIOSSQLiteStatementAdapter

- (instancetype)initWithComYahooAndroidSqliteSQLiteStatement:(ComYahooAndroidSqliteSQLiteStatement *)statement {
  ComYahooSquidbIosIOSSQLiteStatementAdapter_initWithComYahooAndroidSqliteSQLiteStatement_(self, statement);
  return self;
}

- (void)close {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) close];
}

- (void)bindNullWithInt:(jint)index {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) bindNullWithInt:index];
}

- (void)bindLongWithInt:(jint)index
               withLong:(jlong)value {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) bindLongWithInt:index withLong:value];
}

- (void)bindDoubleWithInt:(jint)index
               withDouble:(jdouble)value {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) bindDoubleWithInt:index withDouble:value];
}

- (void)bindStringWithInt:(jint)index
             withNSString:(NSString *)value {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) bindStringWithInt:index withNSString:value];
}

- (void)bindBlobWithInt:(jint)index
          withByteArray:(IOSByteArray *)value {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) bindBlobWithInt:index withByteArray:value];
}

- (void)clearBindings {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) clearBindings];
}

- (void)execute {
  [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) execute];
}

- (jint)executeUpdateDelete {
  return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) executeUpdateDelete];
}

- (jlong)executeInsert {
  return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) executeInsert];
}

- (jlong)simpleQueryForLong {
  return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) simpleQueryForLong];
}

- (NSString *)simpleQueryForString {
  return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement_)) simpleQueryForString];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComYahooAndroidSqliteSQLiteStatement:);
  methods[1].selector = @selector(close);
  methods[2].selector = @selector(bindNullWithInt:);
  methods[3].selector = @selector(bindLongWithInt:withLong:);
  methods[4].selector = @selector(bindDoubleWithInt:withDouble:);
  methods[5].selector = @selector(bindStringWithInt:withNSString:);
  methods[6].selector = @selector(bindBlobWithInt:withByteArray:);
  methods[7].selector = @selector(clearBindings);
  methods[8].selector = @selector(execute);
  methods[9].selector = @selector(executeUpdateDelete);
  methods[10].selector = @selector(executeInsert);
  methods[11].selector = @selector(simpleQueryForLong);
  methods[12].selector = @selector(simpleQueryForString);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "statement_", "LComYahooAndroidSqliteSQLiteStatement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComYahooAndroidSqliteSQLiteStatement;", "bindNull", "I", "bindLong", "IJ", "bindDouble", "ID", "bindString", "ILNSString;", "bindBlob", "I[B" };
  static const J2ObjcClassInfo _ComYahooSquidbIosIOSSQLiteStatementAdapter = { "IOSSQLiteStatementAdapter", "com.yahoo.squidb.ios", ptrTable, methods, fields, 7, 0x1, 13, 1, -1, -1, -1, -1, -1 };
  return &_ComYahooSquidbIosIOSSQLiteStatementAdapter;
}

@end

void ComYahooSquidbIosIOSSQLiteStatementAdapter_initWithComYahooAndroidSqliteSQLiteStatement_(ComYahooSquidbIosIOSSQLiteStatementAdapter *self, ComYahooAndroidSqliteSQLiteStatement *statement) {
  NSObject_init(self);
  self->statement_ = statement;
}

ComYahooSquidbIosIOSSQLiteStatementAdapter *new_ComYahooSquidbIosIOSSQLiteStatementAdapter_initWithComYahooAndroidSqliteSQLiteStatement_(ComYahooAndroidSqliteSQLiteStatement *statement) {
  J2OBJC_NEW_IMPL(ComYahooSquidbIosIOSSQLiteStatementAdapter, initWithComYahooAndroidSqliteSQLiteStatement_, statement)
}

ComYahooSquidbIosIOSSQLiteStatementAdapter *create_ComYahooSquidbIosIOSSQLiteStatementAdapter_initWithComYahooAndroidSqliteSQLiteStatement_(ComYahooAndroidSqliteSQLiteStatement *statement) {
  J2OBJC_CREATE_IMPL(ComYahooSquidbIosIOSSQLiteStatementAdapter, initWithComYahooAndroidSqliteSQLiteStatement_, statement)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbIosIOSSQLiteStatementAdapter)
