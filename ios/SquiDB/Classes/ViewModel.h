//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ViewModel.java
//

#ifndef ViewModel_H
#define ViewModel_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "AbstractModel.h"
#include "J2ObjC_header.h"
#include "Property.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangVoid;
@class SquiDBSqlTable;
@class SquiDBViewModel_TableMappingVisitors;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface SquiDBViewModel : SquiDBAbstractModel

#pragma mark Public

- (instancetype __nonnull)init;

- (SquiDBAbstractModel *)mapToModelWithSquiDBAbstractModel:(SquiDBAbstractModel *)dst;

- (SquiDBAbstractModel *)mapToModelWithSquiDBAbstractModel:(SquiDBAbstractModel *)dst
                                        withSquiDBSqlTable:(SquiDBSqlTable *)tableAlias;

- (SquiDBAbstractModel *)mapToModelWithSquiDBAbstractModel:(SquiDBAbstractModel *)dst
                                              withNSString:(NSString *)tableAlias;

- (id<JavaUtilList>)mapToSourceModels;

#pragma mark Protected

+ (SquiDBViewModel_TableMappingVisitors *)generateTableMappingVisitorsWithSquiDBPropertyArray:(IOSObjectArray *)viewModelProperties
                                                                      withSquiDBPropertyArray:(IOSObjectArray *)aliasedProperties
                                                                      withSquiDBPropertyArray:(IOSObjectArray *)baseProperties;

- (SquiDBViewModel_TableMappingVisitors *)getTableMappingVisitors;

+ (void)validateAliasedPropertiesWithSquiDBPropertyArray:(IOSObjectArray *)aliasedPropertyArray;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBViewModel)

FOUNDATION_EXPORT void SquiDBViewModel_init(SquiDBViewModel *self);

FOUNDATION_EXPORT void SquiDBViewModel_validateAliasedPropertiesWithSquiDBPropertyArray_(IOSObjectArray *aliasedPropertyArray);

FOUNDATION_EXPORT SquiDBViewModel_TableMappingVisitors *SquiDBViewModel_generateTableMappingVisitorsWithSquiDBPropertyArray_withSquiDBPropertyArray_withSquiDBPropertyArray_(IOSObjectArray *viewModelProperties, IOSObjectArray *aliasedProperties, IOSObjectArray *baseProperties);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBViewModel)

@compatibility_alias ComYahooSquidbDataViewModel SquiDBViewModel;

@interface SquiDBViewModel_TableModelMappingVisitor : NSObject < SquiDBProperty_PropertyWritingVisitor >

#pragma mark Public

- (instancetype __nonnull)initWithSquiDBPropertyArray:(IOSObjectArray *)relevantProperties
                                      withJavaUtilMap:(id<JavaUtilMap>)aliasedPropertyMap;

- (SquiDBAbstractModel *)mapWithSquiDBViewModel:(SquiDBViewModel *)src
                        withSquiDBAbstractModel:(SquiDBAbstractModel *)dst;

- (JavaLangVoid *)visitBlobWithSquiDBProperty:(SquiDBProperty *)property
                                       withId:(SquiDBAbstractModel *)dst
                                       withId:(SquiDBViewModel *)src;

- (JavaLangVoid *)visitBooleanWithSquiDBProperty:(SquiDBProperty *)property
                                          withId:(SquiDBAbstractModel *)dst
                                          withId:(SquiDBViewModel *)src;

- (JavaLangVoid *)visitDoubleWithSquiDBProperty:(SquiDBProperty *)property
                                         withId:(SquiDBAbstractModel *)dst
                                         withId:(SquiDBViewModel *)src;

- (JavaLangVoid *)visitIntegerWithSquiDBProperty:(SquiDBProperty *)property
                                          withId:(SquiDBAbstractModel *)dst
                                          withId:(SquiDBViewModel *)src;

- (JavaLangVoid *)visitLongWithSquiDBProperty:(SquiDBProperty *)property
                                       withId:(SquiDBAbstractModel *)dst
                                       withId:(SquiDBViewModel *)src;

- (JavaLangVoid *)visitStringWithSquiDBProperty:(SquiDBProperty *)property
                                         withId:(SquiDBAbstractModel *)dst
                                         withId:(SquiDBViewModel *)src;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBViewModel_TableModelMappingVisitor)

FOUNDATION_EXPORT void SquiDBViewModel_TableModelMappingVisitor_initWithSquiDBPropertyArray_withJavaUtilMap_(SquiDBViewModel_TableModelMappingVisitor *self, IOSObjectArray *relevantProperties, id<JavaUtilMap> aliasedPropertyMap);

FOUNDATION_EXPORT SquiDBViewModel_TableModelMappingVisitor *new_SquiDBViewModel_TableModelMappingVisitor_initWithSquiDBPropertyArray_withJavaUtilMap_(IOSObjectArray *relevantProperties, id<JavaUtilMap> aliasedPropertyMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBViewModel_TableModelMappingVisitor *create_SquiDBViewModel_TableModelMappingVisitor_initWithSquiDBPropertyArray_withJavaUtilMap_(IOSObjectArray *relevantProperties, id<JavaUtilMap> aliasedPropertyMap);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBViewModel_TableModelMappingVisitor)

@interface SquiDBViewModel_TableMappingVisitors : NSObject

#pragma mark Public

- (id<JavaUtilSet>)allMappings;

- (SquiDBViewModel_TableModelMappingVisitor *)getWithIOSClass:(IOSClass *)cls
                                                 withNSString:(NSString *)tableName;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(SquiDBViewModel_TableMappingVisitors)

FOUNDATION_EXPORT void SquiDBViewModel_TableMappingVisitors_init(SquiDBViewModel_TableMappingVisitors *self);

FOUNDATION_EXPORT SquiDBViewModel_TableMappingVisitors *new_SquiDBViewModel_TableMappingVisitors_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SquiDBViewModel_TableMappingVisitors *create_SquiDBViewModel_TableMappingVisitors_init(void);

J2OBJC_TYPE_LITERAL_HEADER(SquiDBViewModel_TableMappingVisitors)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ViewModel_H
