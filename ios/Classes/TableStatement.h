//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/TableStatement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TableStatement")
#ifdef RESTRICT_TableStatement
#define INCLUDE_ALL_TableStatement 0
#else
#define INCLUDE_ALL_TableStatement 1
#endif
#undef RESTRICT_TableStatement

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComYahooSquidbSqlTableStatement_) && (INCLUDE_ALL_TableStatement || defined(INCLUDE_ComYahooSquidbSqlTableStatement))
#define ComYahooSquidbSqlTableStatement_

#define RESTRICT_CompilableWithArguments 1
#define INCLUDE_ComYahooSquidbSqlCompilableWithArguments 1
#include "CompilableWithArguments.h"

#define RESTRICT_SqlStatement 1
#define INCLUDE_ComYahooSquidbSqlSqlStatement 1
#include "SqlStatement.h"

@class ComYahooSquidbSqlCompileContext;
@class ComYahooSquidbSqlCompiledStatement;
@class ComYahooSquidbSqlSqlTable;
@class ComYahooSquidbUtilityVersionCode;

@interface ComYahooSquidbSqlTableStatement : ComYahooSquidbSqlCompilableWithArguments < ComYahooSquidbSqlSqlStatement >

#pragma mark Public

- (instancetype)init;

- (ComYahooSquidbSqlCompiledStatement *)compileWithComYahooSquidbSqlCompileContext:(ComYahooSquidbSqlCompileContext *)compileContext;

- (ComYahooSquidbSqlCompiledStatement *)compileWithComYahooSquidbUtilityVersionCode:(ComYahooSquidbUtilityVersionCode *)sqliteVersion;

- (ComYahooSquidbSqlSqlTable *)getTable;

- (NSString *)sqlForValidationWithComYahooSquidbSqlCompileContext:(ComYahooSquidbSqlCompileContext *)compileContext;

- (NSString *)sqlForValidationWithComYahooSquidbUtilityVersionCode:(ComYahooSquidbUtilityVersionCode *)sqliteVersion;

#pragma mark Protected

- (void)invalidateCompileCache;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbSqlTableStatement)

FOUNDATION_EXPORT void ComYahooSquidbSqlTableStatement_init(ComYahooSquidbSqlTableStatement *self);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlTableStatement)

#endif

#if !defined (ComYahooSquidbSqlTableStatement_ConflictAlgorithm_) && (INCLUDE_ALL_TableStatement || defined(INCLUDE_ComYahooSquidbSqlTableStatement_ConflictAlgorithm))
#define ComYahooSquidbSqlTableStatement_ConflictAlgorithm_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum) {
  ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum_NONE = 0,
  ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum_ROLLBACK = 1,
  ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum_ABORT = 2,
  ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum_FAIL = 3,
  ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum_IGNORE = 4,
  ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum_REPLACE = 5,
};

@interface ComYahooSquidbSqlTableStatement_ConflictAlgorithm : JavaLangEnum

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm * __nonnull)NONE;

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm * __nonnull)ROLLBACK;

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm * __nonnull)ABORT;

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm * __nonnull)FAIL;

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm * __nonnull)IGNORE;

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm * __nonnull)REPLACE;

#pragma mark Public

+ (ComYahooSquidbSqlTableStatement_ConflictAlgorithm *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComYahooSquidbSqlTableStatement_ConflictAlgorithm_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_values_[];

inline ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_get_NONE(void);
J2OBJC_ENUM_CONSTANT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm, NONE)

inline ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_get_ROLLBACK(void);
J2OBJC_ENUM_CONSTANT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm, ROLLBACK)

inline ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_get_ABORT(void);
J2OBJC_ENUM_CONSTANT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm, ABORT)

inline ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_get_FAIL(void);
J2OBJC_ENUM_CONSTANT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm, FAIL)

inline ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_get_IGNORE(void);
J2OBJC_ENUM_CONSTANT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm, IGNORE)

inline ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_get_REPLACE(void);
J2OBJC_ENUM_CONSTANT(ComYahooSquidbSqlTableStatement_ConflictAlgorithm, REPLACE)

FOUNDATION_EXPORT IOSObjectArray *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_values(void);

FOUNDATION_EXPORT ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComYahooSquidbSqlTableStatement_ConflictAlgorithm *ComYahooSquidbSqlTableStatement_ConflictAlgorithm_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlTableStatement_ConflictAlgorithm)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_TableStatement")
