//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/IOSSQLiteDatabaseAdapter.java
//

#include "ICursor.h"
#include "IOSObjectArray.h"
#include "IOSSQLiteDatabaseAdapter.h"
#include "IOSSQLiteStatementAdapter.h"
#include "ISQLitePreparedStatement.h"
#include "J2ObjC_source.h"
#include "SQLiteDatabase.h"
#include "SQLiteStatement.h"
#include "SQLiteTransactionListener.h"
#include "SquidCursorFactory.h"
#include "SquidTransactionListener.h"
#include "java/lang/NullPointerException.h"

@interface ComYahooSquidbIosIOSSQLiteDatabaseAdapter () {
 @public
  ComYahooAndroidSqliteSQLiteDatabase *db_;
}

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbIosIOSSQLiteDatabaseAdapter, db_, ComYahooAndroidSqliteSQLiteDatabase *)

@interface ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter : NSObject < ComYahooAndroidSqliteSQLiteTransactionListener > {
 @public
  id<ComYahooSquidbDataSquidTransactionListener> listener_;
}

- (instancetype)initWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener;

- (void)onBegin;

- (void)onCommit;

- (void)onRollback;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter)

J2OBJC_FIELD_SETTER(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter, listener_, id<ComYahooSquidbDataSquidTransactionListener>)

__attribute__((unused)) static void ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *self, id<ComYahooSquidbDataSquidTransactionListener> listener);

__attribute__((unused)) static ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *create_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter)

@implementation ComYahooSquidbIosIOSSQLiteDatabaseAdapter

- (instancetype)initWithComYahooAndroidSqliteSQLiteDatabase:(ComYahooAndroidSqliteSQLiteDatabase *)db {
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(self, db);
  return self;
}

- (void)beginTransaction {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransaction];
}

- (void)beginTransactionNonExclusive {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransactionNonExclusive];
}

- (void)beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransactionWithListenerWithComYahooAndroidSqliteSQLiteTransactionListener:new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(listener)];
}

- (void)beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransactionWithListenerNonExclusiveWithComYahooAndroidSqliteSQLiteTransactionListener:new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(listener)];
}

- (void)endTransaction {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) endTransaction];
}

- (void)execSQLWithNSString:(NSString *)sql {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) execSQLWithNSString:sql];
}

- (void)execSQLWithNSString:(NSString *)sql
          withNSObjectArray:(IOSObjectArray *)bindArgs {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) execSQLWithNSString:sql withNSObjectArray:bindArgs];
}

- (jboolean)inTransaction {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) inTransaction];
}

- (jboolean)isOpen {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isOpen];
}

- (void)close {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) close];
}

- (void)disableWriteAheadLogging {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) disableWriteAheadLogging];
}

- (jboolean)enableWriteAheadLogging {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) enableWriteAheadLogging];
}

- (jboolean)isWriteAheadLoggingEnabled {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isWriteAheadLoggingEnabled];
}

- (jlong)getMaximumSize {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getMaximumSize];
}

- (jlong)getPageSize {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getPageSize];
}

- (NSString *)getPath {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getPath];
}

- (jboolean)isDatabaseIntegrityOk {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isDatabaseIntegrityOk];
}

- (jboolean)isDbLockedByCurrentThread {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isDbLockedByCurrentThread];
}

- (jboolean)isReadOnly {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isReadOnly];
}

- (jboolean)needUpgradeWithInt:(jint)newVersion {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) needUpgradeWithInt:newVersion];
}

- (void)setForeignKeyConstraintsEnabledWithBoolean:(jboolean)enable {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setForeignKeyConstraintsEnabledWithBoolean:enable];
}

- (void)setMaxSqlCacheSizeWithInt:(jint)cacheSize {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setMaxSqlCacheSizeWithInt:cacheSize];
}

- (void)setMaximumSizeWithLong:(jlong)numBytes {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setMaximumSizeWithLong:numBytes];
}

- (void)setPageSizeWithLong:(jlong)numBytes {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setPageSizeWithLong:numBytes];
}

- (jint)getVersion {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getVersion];
}

- (void)setVersionWithInt:(jint)version_ {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setVersionWithInt:version_];
}

- (id<ComYahooSquidbDataICursor>)rawQueryWithNSString:(NSString *)sql
                                    withNSObjectArray:(IOSObjectArray *)bindArgs {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) rawQueryWithFactoryWithComYahooAndroidSqliteSQLiteDatabase_CursorFactory:new_ComYahooSquidbIosSquidCursorFactory_initWithNSObjectArray_(bindArgs) withNSString:sql withNSStringArray:nil withNSString:nil];
}

- (NSString *)simpleQueryForStringWithNSString:(NSString *)sql
                             withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) simpleQueryForString];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (jlong)simpleQueryForLongWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) simpleQueryForLong];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (void)setTransactionSuccessful {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setTransactionSuccessful];
}

- (NSString *)description {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) description];
}

- (jboolean)yieldIfContendedSafely {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) yieldIfContendedSafely];
}

- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) yieldIfContendedSafelyWithLong:sleepAfterYieldDelay];
}

- (jint)executeUpdateDeleteWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) executeUpdateDelete];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (jlong)executeInsertWithNSString:(NSString *)sql
                 withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) executeInsert];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (void)ensureSqlCompilesWithNSString:(NSString *)sql {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (id<ComYahooSquidbDataISQLitePreparedStatement>)prepareStatementWithNSString:(NSString *)sql {
  return new_ComYahooSquidbIosIOSSQLiteStatementAdapter_initWithComYahooAndroidSqliteSQLiteStatement_([((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql]);
}

- (ComYahooAndroidSqliteSQLiteDatabase *)getWrappedObject {
  return db_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 8, -1, -1, -1, -1 },
    { NULL, "LComYahooSquidbDataICursor;", 0x1, 16, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 18, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 20, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 21, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 22, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 5, -1, -1, -1, -1 },
    { NULL, "LComYahooSquidbDataISQLitePreparedStatement;", 0x1, 24, 5, -1, -1, -1, -1 },
    { NULL, "LComYahooAndroidSqliteSQLiteDatabase;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComYahooAndroidSqliteSQLiteDatabase:);
  methods[1].selector = @selector(beginTransaction);
  methods[2].selector = @selector(beginTransactionNonExclusive);
  methods[3].selector = @selector(beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:);
  methods[4].selector = @selector(beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:);
  methods[5].selector = @selector(endTransaction);
  methods[6].selector = @selector(execSQLWithNSString:);
  methods[7].selector = @selector(execSQLWithNSString:withNSObjectArray:);
  methods[8].selector = @selector(inTransaction);
  methods[9].selector = @selector(isOpen);
  methods[10].selector = @selector(close);
  methods[11].selector = @selector(disableWriteAheadLogging);
  methods[12].selector = @selector(enableWriteAheadLogging);
  methods[13].selector = @selector(isWriteAheadLoggingEnabled);
  methods[14].selector = @selector(getMaximumSize);
  methods[15].selector = @selector(getPageSize);
  methods[16].selector = @selector(getPath);
  methods[17].selector = @selector(isDatabaseIntegrityOk);
  methods[18].selector = @selector(isDbLockedByCurrentThread);
  methods[19].selector = @selector(isReadOnly);
  methods[20].selector = @selector(needUpgradeWithInt:);
  methods[21].selector = @selector(setForeignKeyConstraintsEnabledWithBoolean:);
  methods[22].selector = @selector(setMaxSqlCacheSizeWithInt:);
  methods[23].selector = @selector(setMaximumSizeWithLong:);
  methods[24].selector = @selector(setPageSizeWithLong:);
  methods[25].selector = @selector(getVersion);
  methods[26].selector = @selector(setVersionWithInt:);
  methods[27].selector = @selector(rawQueryWithNSString:withNSObjectArray:);
  methods[28].selector = @selector(simpleQueryForStringWithNSString:withNSObjectArray:);
  methods[29].selector = @selector(simpleQueryForLongWithNSString:withNSObjectArray:);
  methods[30].selector = @selector(setTransactionSuccessful);
  methods[31].selector = @selector(description);
  methods[32].selector = @selector(yieldIfContendedSafely);
  methods[33].selector = @selector(yieldIfContendedSafelyWithLong:);
  methods[34].selector = @selector(executeUpdateDeleteWithNSString:withNSObjectArray:);
  methods[35].selector = @selector(executeInsertWithNSString:withNSObjectArray:);
  methods[36].selector = @selector(ensureSqlCompilesWithNSString:);
  methods[37].selector = @selector(prepareStatementWithNSString:);
  methods[38].selector = @selector(getWrappedObject);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "db_", "LComYahooAndroidSqliteSQLiteDatabase;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComYahooAndroidSqliteSQLiteDatabase;", "beginTransactionWithListener", "LComYahooSquidbDataSquidTransactionListener;", "beginTransactionWithListenerNonExclusive", "execSQL", "LNSString;", "LNSString;[LNSObject;", "needUpgrade", "I", "setForeignKeyConstraintsEnabled", "Z", "setMaxSqlCacheSize", "setMaximumSize", "J", "setPageSize", "setVersion", "rawQuery", "simpleQueryForString", "simpleQueryForLong", "toString", "yieldIfContendedSafely", "executeUpdateDelete", "executeInsert", "ensureSqlCompiles", "prepareStatement", "LComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter;" };
  static const J2ObjcClassInfo _ComYahooSquidbIosIOSSQLiteDatabaseAdapter = { "IOSSQLiteDatabaseAdapter", "com.yahoo.squidb.ios", ptrTable, methods, fields, 7, 0x1, 39, 1, -1, 25, -1, -1, -1 };
  return &_ComYahooSquidbIosIOSSQLiteDatabaseAdapter;
}

@end

void ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(ComYahooSquidbIosIOSSQLiteDatabaseAdapter *self, ComYahooAndroidSqliteSQLiteDatabase *db) {
  NSObject_init(self);
  if (db == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"Can't create SQLiteDatabaseAdapter with a null SQLiteDatabase");
  }
  self->db_ = db;
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter *new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(ComYahooAndroidSqliteSQLiteDatabase *db) {
  J2OBJC_NEW_IMPL(ComYahooSquidbIosIOSSQLiteDatabaseAdapter, initWithComYahooAndroidSqliteSQLiteDatabase_, db)
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter *create_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(ComYahooAndroidSqliteSQLiteDatabase *db) {
  J2OBJC_CREATE_IMPL(ComYahooSquidbIosIOSSQLiteDatabaseAdapter, initWithComYahooAndroidSqliteSQLiteDatabase_, db)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbIosIOSSQLiteDatabaseAdapter)

@implementation ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter

- (instancetype)initWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(self, listener);
  return self;
}

- (void)onBegin {
  [((id<ComYahooSquidbDataSquidTransactionListener>) nil_chk(listener_)) onBegin];
}

- (void)onCommit {
  [((id<ComYahooSquidbDataSquidTransactionListener>) nil_chk(listener_)) onCommit];
}

- (void)onRollback {
  [((id<ComYahooSquidbDataSquidTransactionListener>) nil_chk(listener_)) onRollback];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComYahooSquidbDataSquidTransactionListener:);
  methods[1].selector = @selector(onBegin);
  methods[2].selector = @selector(onCommit);
  methods[3].selector = @selector(onRollback);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", "LComYahooSquidbDataSquidTransactionListener;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComYahooSquidbDataSquidTransactionListener;", "LComYahooSquidbIosIOSSQLiteDatabaseAdapter;" };
  static const J2ObjcClassInfo _ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter = { "SQLiteTransactionListenerAdapter", "com.yahoo.squidb.ios", ptrTable, methods, fields, 7, 0xa, 4, 1, 1, -1, -1, -1, -1 };
  return &_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter;
}

@end

void ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *self, id<ComYahooSquidbDataSquidTransactionListener> listener) {
  NSObject_init(self);
  self->listener_ = listener;
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener) {
  J2OBJC_NEW_IMPL(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter, initWithComYahooSquidbDataSquidTransactionListener_, listener)
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *create_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener) {
  J2OBJC_CREATE_IMPL(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter, initWithComYahooSquidbDataSquidTransactionListener_, listener)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter)
