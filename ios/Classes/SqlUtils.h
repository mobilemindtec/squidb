//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/SqlUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SqlUtils")
#ifdef RESTRICT_SqlUtils
#define INCLUDE_ALL_SqlUtils 0
#else
#define INCLUDE_ALL_SqlUtils 1
#endif
#undef RESTRICT_SqlUtils

#if !defined (ComYahooSquidbSqlSqlUtils_) && (INCLUDE_ALL_SqlUtils || defined(INCLUDE_ComYahooSquidbSqlSqlUtils))
#define ComYahooSquidbSqlSqlUtils_

@class IOSByteArray;
@class JavaLangStringBuilder;
@protocol ComYahooSquidbSqlArgumentResolver;
@protocol JavaUtilCollection;

@interface ComYahooSquidbSqlSqlUtils : NSObject

#pragma mark Public

+ (jboolean)equalsWithNSString:(NSString *)a
                  withNSString:(NSString *)b;

+ (NSString *)escapeLikePatternWithNSString:(NSString *)pattern
                                   withChar:(jchar)escape;

+ (jboolean)isEmptyWithNSString:(NSString *)str;

+ (id)resolveArgReferencesWithId:(id)arg;

#pragma mark Package-Private

+ (void)addInlineCollectionToSqlStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sql
                          withComYahooSquidbSqlArgumentResolver:(id<ComYahooSquidbSqlArgumentResolver>)argResolver
                                         withJavaUtilCollection:(id<JavaUtilCollection>)values;

+ (NSString *)byteArrayToBlobLiteralWithByteArray:(IOSByteArray *)blob;

+ (NSString *)sanitizeStringAsLiteralWithNSString:(NSString *)literal;

+ (NSString *)toSanitizedStringWithId:(id)value
withComYahooSquidbSqlArgumentResolver:(id<ComYahooSquidbSqlArgumentResolver>)argResolver;

@end

J2OBJC_STATIC_INIT(ComYahooSquidbSqlSqlUtils)

FOUNDATION_EXPORT jboolean ComYahooSquidbSqlSqlUtils_isEmptyWithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean ComYahooSquidbSqlSqlUtils_equalsWithNSString_withNSString_(NSString *a, NSString *b);

FOUNDATION_EXPORT id ComYahooSquidbSqlSqlUtils_resolveArgReferencesWithId_(id arg);

FOUNDATION_EXPORT void ComYahooSquidbSqlSqlUtils_addInlineCollectionToSqlStringWithJavaLangStringBuilder_withComYahooSquidbSqlArgumentResolver_withJavaUtilCollection_(JavaLangStringBuilder *sql, id<ComYahooSquidbSqlArgumentResolver> argResolver, id<JavaUtilCollection> values);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_toSanitizedStringWithId_withComYahooSquidbSqlArgumentResolver_(id value, id<ComYahooSquidbSqlArgumentResolver> argResolver);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_byteArrayToBlobLiteralWithByteArray_(IOSByteArray *blob);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_sanitizeStringAsLiteralWithNSString_(NSString *literal);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_escapeLikePatternWithNSString_withChar_(NSString *pattern, jchar escape);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlSqlUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_SqlUtils")
